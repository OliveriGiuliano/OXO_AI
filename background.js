!function(e){var t={};function s(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(i,r,function(t){return e[t]}.bind(null,r));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=50)}([function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(1);class r{static configure(e){r.path=e,r.log4js.configure({appenders:{console:{type:"console"},all:{type:"dateFile",pattern:".dd-MM-yyyy",daysToKeep:5,filename:i.join(r.path,"logs","log-all.log"),encoding:"utf-8",keepFileExt:!0},default:{type:"dateFile",pattern:".dd-MM-yyyy",daysToKeep:5,filename:i.join(r.path,"logs","log-default.log"),encoding:"utf-8",keepFileExt:!0},migrate:{type:"dateFile",pattern:".dd-MM-yyyy",daysToKeep:5,filename:i.join(r.path,"logs","log-migrate.log"),encoding:"utf-8",keepFileExt:!0},icure:{type:"dateFile",pattern:".dd-MM-yyyy",daysToKeep:5,filename:i.join(r.path,"logs","log-icure.log"),encoding:"utf-8",keepFileExt:!0},templating:{type:"dateFile",pattern:".dd-MM-yyyy",daysToKeep:5,filename:i.join(r.path,"logs","log-templating.log"),encoding:"utf-8",keepFileExt:!0},couchdb:{type:"dateFile",pattern:".dd-MM-yyyy",daysToKeep:5,filename:i.join(r.path,"logs","log-couchdb.log"),encoding:"utf-8",keepFileExt:!0}},categories:{"migration-service":{appenders:["migrate","all","console"],level:"info"},reporting:{appenders:["templating","all","console"],level:"info"},icure:{appenders:["icure","all","console"],level:"info"},couchdb:{appenders:["couchdb","all","console"],level:"info"},default:{appenders:["default","all","console"],level:"info"}}})}static getLogger(e="default"){return r.log4js.getLogger(e)}}r.path="",r.log4js=s(32),t.LoggerService=r},function(e,t){e.exports=require("path")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class i{}i.WIN="win32",i.MAC="darwin",i.X64="x64",i.X86="ia32",i.UTF8="utf-8",i.ELECTRON_UPDATE_INFO="ELECTRON_UPDATE_INFO",i.CHECK_FOR_UPDATE="checking-for-update",i.UPDATE_AVAILABLE="update-available",i.DOWNLOAD_PROGRESS="download-progress",i.UPDATE_FINISHED="update-downloaded",i.NO_UPDATE_AVAILABLE="update-not-available",i.ELECTRON_UPDATE_FINISHED="ELECTRON_UPDATE_FINISHED",i.MIGRATION_SERVICE_DEFAULT_PORT=8080,i.COUCH_DB_DEFAULT_PORT=5984,i.ICURE_BACKEND_DEFAULT_PORT=16043,i.TEMPLATING_DEFAULT_PORT=9e3,i.CONFIG_FINISHED="CONFIG_FINISHED",i.GO_TO_MAIN="go-to-main",i.STEP_STATE_CHANGED="step-state-changed",i.CANAL_KILL="canal-kill",i.STEP_FIREWALL="step-firewall",i.CHECK_FIREWALL_7="check-firewall-java-7",i.CHECK_FIREWALL_8="check-firewall-java-8",i.STEP_RESOURCE_UPDATER="step-resource-updater",i.CHECK_RESOURCES="check-resources",i.STEP_BEID="step-beid",i.BEID_INSTALL="beid-install",i.STEP_MIGRATION_INIT="step-migration-config",i.ODBC_INSTALL="odbc-install",i.ODBC_CONFIG="odbc-config",i.ODBC_CHECK_INSTALLED="odbc-check-installed",i.STEP_COUCH_DB="step-couchDB",i.COUCH_DB="couchdb",i.COUCH_DB_FULL_NAME="Apache CouchDB",i.COUCH_DB_INSTALL="couchDB-install",i.COUCH_DB_CONFIG="couchDB-config",i.COUCH_DB_FINALISE="couchDB-finalise",i.COUCH_DB_UPDATE="couchDB-update",i.CREATE_TABLES="couchDB-create-tables",i.COUCH_DB_LAUNCHED="couchDB-launched",i.WAIT_REPLICATION="wait-replication",i.CANCEL_REPLICATION="cancel-replication",i.WAIT_INDEXING="wait-indexing",i.STEP_MIGRATION_EXEC="step-migration-execution",i.START_MIGRATION="start-migration",i.CREATE_EXCEL="create-excel",i.STEP_BACKEND="step-backend",i.ICURE_BACKEND="icure",i.MIGRATION_BACKEND="migration-service",i.REPORTING_BACKEND="reporting",i.STATE_SUCCESS="success",i.STATE_IN_PROGRESS="in_progress",i.STATE_FAILURE="failure",i.STATE_WARNING="warning",t.Const=i},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("electron")},function(e,t){e.exports=require("child_process")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(1),r=s(7),o=s(0),n=s(2),a=s(10),c=s(41),l=s(21),h=s(4);class g{constructor(){}initialize(e){g.logger.info(`ConfigService will initialize\n      tierResourcePath: ${e.tierResourcePath}\n      basePath: ${e.basePath}\n    `),g.tierResourcePath=e.tierResourcePath,g.filePath=i.join(g.tierResourcePath,"config","config.json"),g.defaultConfigFilePath=i.join(e.basePath,"config"),a.ensureDirSync(g.defaultConfigFilePath),this.moveConfigFromAppDataToNewPath(e.tierResourcePath),a.pathExistsSync(g.filePath)?(g.logger.info("There is a config file, need to merge."),this.read(),this.mergeConfig(e.platform)):(g.logger.info("There is not config file. Need to create a default one."),this.createDefault(e.platform),this.read()),this.splitTaktikUrl(),this.migrateFrom64To32bits(),this.changeEhealthBoxDirMac(),this.importMigrationMode(),this.save()}get config(){return g.configData}set config(e){g.configData=e,this.save()}read(){g.logger.info(`Reading the config from ${g.filePath}:`),g.configData=JSON.parse(a.readFileSync(g.filePath).toString()),g.logger.info(this.config)}save(){g.logger.info(`Saving the config to ${g.filePath}:`),g.logger.info(this.config),a.writeFileSync(g.filePath,JSON.stringify(this.config,null,2))}createDefault(e){let t=i.join(g.defaultConfigFilePath,e==n.Const.MAC?"default-config-mac.json":"default-config-win.json");try{a.copySync(t,g.filePath,{overwrite:!1}),g.logger.info("Copy the default config file successfully")}catch(e){throw g.logger.error("An exception happened during the copy for default config file. Error :"),g.logger.error(e),e}}mergeConfig(e){let t=this.config,o=s(10),a=i.join(g.defaultConfigFilePath,e==n.Const.MAC?"default-config-mac.json":"default-config-win.json"),c=JSON.parse(o.readFileSync(a));g.logger.info("New Config : "),g.logger.info(c),r.defaults(t,c),g.logger.info("Merge : "),g.logger.info(t),g.configData=t,this.save()}configIsValid(e){return!!(e.taktikCredential&&e.taktikCredential.groupId&&e.taktikCredential.groupPassword&&e.beidPath&&e.couchDbPath&&e.replicationMode&&e.migration&&e.migration.migrationMode)}splitTaktikUrl(){const e=this.config.taktikUrl;if(e){g.logger.info("______________________________________________________________");let t=/https:\/\/(.*):(.*)@(.*)\/icure-(.*)/g.exec(e)||[];const s=t[1],i=t[2];this.config.taktikCredential=new c.TaktikCredential(s,i),delete this.config.taktikUrl}}migrateFrom64To32bits(){this.config.odbc&&"EPICURE_64"==this.config.odbc.name&&(g.logger.info("Migrate from EPICURE_64 Datasource to EPICURE_32"),this.config.odbc.name="EPICURE_32",this.config.odbc.driver="C:\\Program Files (x86)\\Common Files\\PC SOFT\\22.0\\ODBC\\Win32x86\\wd220hfo.dll",g.logger.info(`Default value set to name:${this.config.odbc.name} & driver:${this.config.odbc.driver}`))}changeEhealthBoxDirMac(){this.config.eHealthBox.eHealthBoxDir=this.config.eHealthBox.eHealthBoxDir.replace("Application Supports","Application Support")}importMigrationMode(){this.config.neverDoMigration&&(r.set(this.config,"migration.migrationMode",l.MigrationMode.neverDoMigration),delete this.config.neverDoMigration)}moveConfigFromAppDataToNewPath(e){const t=h.app.getPath("userData"),s=i.join(t,"config","config.json"),r=i.join(e,"config","config.json");!a.existsSync(r)&&a.existsSync(s)&&(g.logger.info(`Copying config from ${s} to ${r}`),a.copySync(s,r),a.renameSync(s,i.join(t,"config","config-old.json")));const o=i.join(t,"installed.config.json"),n=i.join(e,"installed.config.json");!a.existsSync(n)&&a.existsSync(o)&&(g.logger.info(`Copying config from ${o} to ${n}`),a.copySync(o,n),a.renameSync(o,i.join(t,"installed-old.config.json")))}}g.logger=o.LoggerService.getLogger(),g.tierResourcePath="",g.filePath="",g.defaultConfigFilePath="",t.ConfigService=g},function(e,t){e.exports=require("lodash")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(4),r=s(31),o=s(0);t.AbstractApiListener=class{constructor(e,t){this.preffix=e,this.window=t,this.logger=o.LoggerService.getLogger()}set browserWindow(e){this.window=e}getCanal(e){return r.CanalManager.getcanals(`${this.preffix}-${e}`)}setupPromise(e,t){i.ipcMain.on(e.canalIn,(s,i)=>{t(i).then(t=>{try{this.window&&this.window.webContents.send(e.canalEnd,t)}catch(e){this.logFailure(e)}}).catch(t=>{try{this.window&&this.window.webContents.send(e.canalErr,t)}catch(e){this.logFailure(e)}})})}setupObservable(e,t){i.ipcMain.on(e.canalIn,(s,i)=>{t(i).subscribe(t=>{try{this.window&&this.window.webContents.send(e.canalOut,t)}catch(e){this.logFailure(e)}},t=>{try{this.window&&this.window.webContents.send(e.canalErr,t)}catch(e){this.logFailure(e)}},()=>{try{this.window&&this.window.webContents.send(e.canalEnd)}catch(e){this.logFailure(e)}})})}logFailure(e){}}},,function(e,t){e.exports=require("fs-extra")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(4),r=s(2);class o{static set appIsClosed(e){o._appIsClosed=e}static showError(e,t){return new Promise(t=>{this._appIsClosed||i.dialog.showMessageBox({type:"error",message:e},e=>t(e))})}static showFatal(e,t){this.showError(e,t).then(()=>i.ipcMain.emit(r.Const.CANAL_KILL))}static directoryChooser(){return new Promise(e=>{i.dialog.showOpenDialog({properties:["openDirectory"]},t=>{e(t)})})}}o._appIsClosed=!1,t.DialogUtils=o},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0);class r{static getDataLocalHost(e,t,s="application/json",i=!1){return r.getData("127.0.0.1",e,t,s,i)}static getData(e,t,s,i="application/json",r=!1){let o={host:e,port:s,path:t,method:"GET",headers:{Accept:i}};return this.request(o,null,r)}static request(e,t=null,i=!1,r=!1,o=!1){return this.logger.info("Try to request:"),this.logger.info(e),new Promise((n,a)=>{try{let c="";const l=s(o?35:36).request(e,e=>{i?n(e.statusCode):r?n(e.headers):(e.setEncoding("utf8"),e.on("data",e=>{c+=e}),e.on("end",()=>{let e;try{e=JSON.parse(c)}catch(t){e=c}finally{n(e)}}),e.on("error",e=>{a(e)}))});l.on("error",e=>{a(e)}),t&&l.write(t),l.end()}catch(e){a(e)}})}}r.logger=i.LoggerService.getLogger(),t.HttpUtils=r},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(2);t.ServiceAddresses=class{constructor(e=new r(i.Const.COUCH_DB_DEFAULT_PORT),t=new r(i.Const.ICURE_BACKEND_DEFAULT_PORT),s=new r(i.Const.TEMPLATING_DEFAULT_PORT),o=new r(i.Const.MIGRATION_SERVICE_DEFAULT_PORT)){this.couchDb=e,this.icure=t,this.templating=s,this.migrationService=o}};class r{constructor(e,t="localhost",s=!1,i=e){this.port=e,this.host=t,this.isRemote=s,this.proxyPort=i}}t.ServiceAddress=r},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0),r=s(60),o=s(33),n=s(70),a=s(71),c=s(74),l=s(2),h=s(82),g=s(43),u=s(6),d=s(85),f=s(41),p=s(11),C=s(87),E=s(7),S=s(3),_=s(1);var m;t.Workflow=class extends g.AbstractListenable{constructor(e){super(),this.logger=i.LoggerService.getLogger(),this.configService=new u.ConfigService,this.config=new f.ConfigModel,this.couchDBService=new r.CouchDBService(e,this.emit),this.backendService=new o.BackendService(e,this.emit),this.migrateService=new n.MigrateService(e,this.emit),this.odbcService=new a.ODBCService(this.backendService.migrationRestService,e,this.emit),this.updateService=new c.UpdateService(e,this.emit),this.beidService=new h.BeidService(e,this.emit),this.firewallPrompterService=new d.FirewallPrompterService(e,this.emit),this.platform=e.platform}stop(){this.backendService.stopMigrationBackend(),this.logger.info("Backends stopped")}createDefaultUser(){return this.couchDBService.createDefaultIcureUser(this.config.taktikCredential)}start(){this.loadConfig();const e=this.config.installationType;if("lite"!=e&&"full"!=e)throw new Error(`The installation type is not valid. Only 'lite' and 'full' type are supported. Type:${e}`);if(!this.configService.configIsValid(this.config))throw new Error("The config is not valid. Cannot start workflow");return this.logger.info(`Starting workflow ${e}`),(this.platform==l.Const.MAC?this.macWorkflow(e):this.windowsWorkflow(e)).catch(e=>{throw this.logger.error(`Something wrong happened in the workflow. Error : ${e}`),e&&p.DialogUtils.showError(e),new Error(e)})}getInstallableSoftwares(){return this.platform===l.Const.MAC?new Promise((e,t)=>{const s=_.join(__dirname,"..","resources","darwin-x64-update.config.json");return S.readFile(s,{encoding:"UTF8"},(s,i)=>{s?t(s):e(JSON.parse(i).files)})}):new Promise((e,t)=>{const s=_.join(__dirname,"..","resources","win32-x64-update.config.json");return S.readFile(s,{encoding:"UTF8"},(s,i)=>{s?t(s):e(JSON.parse(i).files)})})}get doMigration(){const e=E.get(this.config,"migration.migrationMode");return"full"==E.get(this.config,"installationType")&&C.MigrationUtils.shouldDoMigration(e)}loadConfig(){this.config=this.configService.config,this.beidService.beidPath=this.config.beidPath,this.couchDBService.couchDbPath=this.config.couchDbPath}setupMigration(){const e=this.config.migration.migrationMode;if(!C.MigrationUtils.canDoMigration(e))throw new Error(`The previous mode was "${e}". You cannot do migration.`);return this.firewallPrompterService.promptJava7FirewallPermission().then(e=>this.odbcService.checkODBCInstalled()).then(e=>e?(this.logger.info("ODBC is  installed"),e):this.odbcService.install().then(e=>this.odbcService.checkODBCInstalled()).then(e=>{if(e)return this.logger.info("ODBC is correctly installed"),e;throw this.logger.info("ODBC is not correctly installed"),p.DialogUtils.showFatal("ODBC n'est pas correctement installé. Veillez relancer l'application"),new Error("ODBC is not correctly installed")})).then(e=>E.get(this,"config.odbc.manualConfig")?(this.logger.info("Configuration ODBC manuelle"),m.ALREADY_DONE):(this.logger.info("Configuration ODBC automatique"),this.odbcService.validateConfigFile().then(e=>this.odbcService.config()))).then(e=>this.odbcService.checkConfig())}windowsWorkflow(e){let t;this.logger.info("Start WINDOWS starter workflow");const s="lite"===e||"full"===e,i="full"===e,r="full"===e,o="full"===e;let n=this.firewallPrompterService.promptJava8FirewallPermission().then(()=>this.updateService.updateResources());return this.doMigration&&(n=n.then(()=>this.setupMigration())),s&&(n=n.then(()=>this.beidService.installBeidSoft())),i&&(n=n.then(()=>this.couchDBInitWorkflow()).then(e=>{t=e==m.ALREADY_DONE})),this.doMigration&&(n=n.then(()=>this.processMigration(t))),n=n.then(()=>this.startBackends(r,o))}macWorkflow(e){this.logger.info("Start MAC starter workflow "+e);let t=this.updateService.updateResources();const s="full"===e,i="full"===e,r="full"===e;return("lite"===e||"full"===e)&&(t=t.then(()=>this.beidService.installBeidSoft())),s&&(t=t.then(()=>this.couchDBInitWorkflow())),t=t.then(()=>this.startBackends(i,r))}startBackends(e,t){let s;return s=e&&t?Promise.all([this.backendService.startReportingIfNotRunning(),this.backendService.startIcureIfNotRunning()]):e?this.backendService.startIcureIfNotRunning():t?this.backendService.startReportingIfNotRunning():this.backendsAreAccessible()}couchDBInitWorkflow(){return(this.platform==l.Const.WIN?this.couchDBService.updateCouchDb():Promise.resolve()).then(e=>this.couchDBService.config()).then(e=>this.couchDBService.checkCouchDbLaunched()).then(e=>this.couchDBService.createTables()).then(e=>this.couchDBService.finalize(this.config.taktikCredential,this.config.replicationMode)).then(e=>e!==m.ALREADY_DONE?(this.logger.info("Need to start ICURE to start replication"),this.backendService.startIcureIfNotRunning()):e)}processMigration(e){const t=this.config.migration.migrationMode;if(!C.MigrationUtils.canDoMigration(t))throw new Error(`The previous mode was "${t}". You cannot do migration.`);return this.couchDBService.waitForReplication(e).then(e=>this.couchDBService.waitForIndexes()).then(e=>this.backendService.stopIcure()).then(e=>this.couchDBService.cancelReplicationTasks()).then(e=>this.backendService.startMigrationBackendIfNotRunning()).then(e=>this.migrateService.askAndCreateCSV()).then(e=>e==m.DONE?this.migrateService.askToStartMigration():e).then(e=>this.migrateService.start(this.config.migration.migrationMode)).then(e=>this.migrateService.finalise()).then(e=>this.couchDBService.waitForIndexes())}backendsAreAccessible(){return this.logger.info("Check backendsAreAccessible"),Promise.all([this.backendService.icureIsAccessible(),this.backendService.reportingIsAccessible()]).then(e=>{const t=e[0],s=e[1];if(!t)throw new Error("Icure is not accessible, check your config and your connection with the remote");if(!s)throw new Error("Reporting is not accessible, check your config and your connection with the remote");return t&&s})}},function(e){e[e.DONE=0]="DONE",e[e.FAIL=1]="FAIL",e[e.ALREADY_DONE=2]="ALREADY_DONE",e[e.NOT_FINISHED=3]="NOT_FINISHED"}(m=t.WorkflowResult||(t.WorkflowResult={}))},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(6),r=s(16),o=s(0);t.AbstractService=class{constructor(e,t){this.systemInfo=e,this.sendProgress=t,this.configService=new i.ConfigService,this.updateConfigService=new r.UpdateConfigService,this.logger=o.LoggerService.getLogger()}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(1),r=s(44),o=s(0);class n{constructor(){this.logger=o.LoggerService.getLogger()}initialize(e){n.path=i.join(e.basePath,`${e.platform}-${e.arch}-update.config.json`),this.read()}get config(){return n.updateConfig}getUpdateFileInfo(e){this.logger.info(`Getting update file info. Name : ${e}`);const t=this.config.files.find(t=>void 0!=t.fileName&&t.fileName.toLowerCase()==e.toLowerCase());if(void 0===t){const t=`No UpdateInfo for ${e}`;throw this.logger.error(t),new Error(t)}return t}read(){let e=s(3);n.updateConfig=JSON.parse(e.readFileSync(n.path,"UTF-8"))}}n.updateConfig=new r.UpdateConfig,t.UpdateConfigService=n},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(20),r=s(2),o=s(1),n=s(5),a=s(22),c=s(3),l=s(12),h=s(23),g=s(13);class u extends i.AbstractBackend{constructor(e,t){super(r.Const.ICURE_BACKEND,e,t),this.defaultPath="/rest/v1/icure",this.path=this.defaultPath,t.platform==r.Const.MAC&&this.createDirectory()}createDirectory(){if(!c.existsSync("/opt/icure/production")&&!u.asked){u.asked=!0;let e=new h.SudoExec,t=s(24);e.exec(`mkdir -p /opt/icure/production && chown -R ${t.sync()} /opt/icure`,(e,t,s)=>{e&&this.logger.error(`Failed to create /opt/icure/production. Error : ${e}`)})}}spawn(){let e;e=this.systemInfo.platform==r.Const.WIN?o.join(this.systemInfo.tierResourcePath,"java","win32-x64","bin","java.exe"):o.join(this.systemInfo.tierResourcePath,"java","darwin-x64","Home","bin","java");const t=["-Xms1024m","-Xmx1024m","-Dorg.ektorp.support.AutoUpdateViewOnChange=false","-Dicure.authentication.local=true","-Dfile.encoding=utf8","-jar",o.join(this.systemInfo.tierResourcePath,"icure-backend.jar"),`--server.port=${this.address.port}`];this.logger.info("Spawning the child process for Icure. Command : "),this.logger.info(`${e} ${t.join(" ")}`);let i=s(3).openSync(o.join(this.systemInfo.tierResourcePath,"logs","log-icure.log"),"a");return n.spawn(e,t,{detached:!0,stdio:[i,i,i]})}isRunning(){return super.isRunning("/v","text/plain")}validateRunningResponse(e){return e}callShutdown(e,t){return new Promise((s,i)=>{l.HttpUtils.getData(e.host,`${t}/p`,e.port,"text/plain").then(e=>{this.logger.info(`Backend ${this.name}  PID request responded with : ${e}`);let t=+e.match(/^\d+/g)[0];this.logger.info(`${this.name} backend gave the PID ${t}`),a.kill(t,e=>{e?(this.logger.info(`${this.name} backend failled to kill process PID=${t}. ERROR : ${e}`),s(!1)):(this.logger.info(`${this.name} backend killed process PID=${t} with success`),s(!0))})}).catch(e=>{this.logger.info(`${this.name} backend failed to call /p. Error : ${e}`),this.isRunning().then(e=>{this.logger.info(`${this.name} backend is running? ${e}`)}),s(!1)})})}}u.DEFAULT_ADDRESS=new g.ServiceAddress(r.Const.ICURE_BACKEND_DEFAULT_PORT),u.asked=!1,t.IcureBackend=u},function(e,t){e.exports=require("rxjs")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(10),r=s(0),o=s(11);class n{static createDirectoryIfNotExists(e){i.ensureDir(e).then(()=>{n.logger.info(`${e} now exits`)}).catch(t=>{throw n.logger.error(`Fail creating ${e}`),new Error(t)})}static exists(e){return i.existsSync(e)}static chooseDirectory(){return o.DialogUtils.directoryChooser().then(e=>{if(e&&e[0])return e[0];throw new Error("No directory chosen")})}}n.logger=r.LoggerService.getLogger(),t.FileHelper=n},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(12),r=s(0);t.AbstractBackend=class{constructor(e,t,s){if(this.name=e,this.address=t,this.systemInfo=s,this.baseUrl="",this.logger=r.LoggerService.getLogger(this.name),!t||!t.port||!t.host){const e=`The address is not valid. Address : ${t}`;throw this.logger.error(e),new Error(e)}}set path(e){this.baseUrl=e}start(){if(this.logger.info(`Starting ${this.name} backend`),this.address.isRemote){const e=`${this.name} is not started or not accessible at "${this.address.host}:${this.address.port}". Cannot start this service on remote.`;return this.logger.error(e),Promise.reject(e)}return new Promise((e,t)=>{try{this.process=this.spawn();let s=0,i=setInterval(()=>{this.isRunning().then(r=>{r?(this.logger.info(`Start ${this.name} backend successfully`),clearInterval(i),e(!0)):(this.logger.info(`${this.name} backend is starting (try ${s++})`),s>=80&&(this.logger.error(`Could not start ${this.name}. (Tried ${s} times to call without response)`),clearInterval(i),t(`Failed to start ${this.name} backend`)))})},2e3);this.process.stdout&&this.process.stdout.on("data",e=>{e&&this.logger.info(e.toString("UTF-8"))}),this.process.stderr&&this.process.stderr.on("data",e=>{e&&(this.logger.error(e.toString("UTF-8")),clearInterval(i))}),this.process.on("exit",e=>{this.logger.info(`${this.name} backend ended with code ${e}`),0==e&&(clearInterval(i),t(e))})}catch(e){this.logger.error(`${this.name} backend failed. Error : ${e}`),t(e)}})}isRunning(e="/check",t="application/json"){return this.logger.info(`Checking if ${this.name} backend is running`),new Promise((s,r)=>{i.HttpUtils.getData(this.address.host,`${this.baseUrl}${e}`,this.address.port,t).then(e=>{this.logger.info(`Backend ${this.name} responded with :`),this.logger.info(e),this.validateRunningResponse(e)?(this.logger.info(`Backend ${this.name} is running`),s(!0)):(this.logger.warn(`Backend ${this.name} is not running`),s(!1))}).catch(e=>{this.logger.warn(`Backend ${this.name} is not running`),s(!1)})})}stop(){return this.logger.info(`Stopping ${this.name} backend`),this.callShutdown(this.address,this.baseUrl).then(e=>(e?this.logger.info(`----- ${this.name} backend stopped successfully`):this.logger.error(`----- Failed to stop ${this.name} backend`),e))}callShutdown(e,t){return new Promise((s,r)=>{i.HttpUtils.getData(e.host,`${t}/shutdown`,e.port).then(e=>{e||(e="empty"),this.logger.info(`Backend ${this.name} shutdown with a result : ${e}`),setTimeout(()=>{this.isRunning().then(e=>{e?(this.logger.warn(`${this.name} backend is still running`),s(!1)):(this.logger.info(`${this.name} backend is correctly shutdown`),s(!0))})},1e3)}).catch(e=>{this.logger.error(`The /shutdown failed for ${this.name}. Error : ${e}`),r(!1)})})}validateRunningResponse(e){return e.ok}version(){return Promise.resolve()}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.noMigration="no",e.fullMigration="full",e.testMigration="test",e.neverDoMigration="never"}(t.MigrationMode||(t.MigrationMode={}))},function(e,t){e.exports=require("ps-node")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0);t.SudoExec=class{constructor(){this.logger=i.LoggerService.getLogger()}exec(e,t,s){this.execCore(e,t)}execCore(e,t){this.logger.info(`Execute ${e} with administrative rights`),s(37).exec(e,{name:"Medispring"},(e,s,i)=>{this.logger.info("Sudo exec results : "),s&&this.logger.info(`stdout : ${s}`),e&&this.logger.error(`error : ${e}`),i&&this.logger.info(`result : ${i}`),e||s||i||this.logger.info("No result"),t.call(this,e,s,i)})}}},function(e,t){e.exports=require("username")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(20),r=s(2),o=s(5),n=s(1),a=s(13);class c extends i.AbstractBackend{constructor(e,t){super(r.Const.REPORTING_BACKEND,e,t)}spawn(){let e;e=this.systemInfo.platform==r.Const.WIN?n.join(this.systemInfo.tierResourcePath,"java","win32-x64","bin","java.exe"):n.join(this.systemInfo.tierResourcePath,"java","darwin-x64","Home","bin","java");let t=["-Xmx1024m","-Dfile.encoding=utf8","-jar",n.join(this.systemInfo.tierResourcePath,"medispring-templating.jar"),`--server.port=${this.address.port}`];this.logger.info("Spawning the child process for Reporting. Command :"),this.logger.info(`${e} ${t.join(" ")}`);let i=s(3).openSync(n.join(this.systemInfo.tierResourcePath,"logs","log-templating.log"),"a");return o.spawn(e,t,{detached:!0,stdio:[i,i,i]})}}c.DEFAULT_ADDRESS=new a.ServiceAddress(r.Const.TEMPLATING_DEFAULT_PORT),t.ReportingBackend=c},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(20),r=s(2),o=s(5),n=s(1),a=s(13);class c extends i.AbstractBackend{constructor(e,t){super(r.Const.MIGRATION_BACKEND,e,t)}spawn(){if(this.systemInfo.platform==r.Const.WIN&&this.systemInfo.arch==r.Const.X64){this.logger.info("Start child process for migration WINDOWS");const e=n.join(this.systemInfo.tierResourcePath,"java7","win32-x64","bin","java.exe"),t=n.join(this.systemInfo.tierResourcePath,"epicure-rest-service.jar"),s=["-Xmx1000m","-jar",t,`--server.port=${this.address.port}`];return this.logger.info("Executing command : "),this.logger.info(`${t} ${s.join(" ")}`),o.spawn(e,s,{detached:!0})}return null}stop(){return this.process?Promise.resolve(this.process.kill("SIGINT")):Promise.resolve(!0)}}c.DEFAULT_ADDRESS=new a.ServiceAddress(r.Const.MIGRATION_SERVICE_DEFAULT_PORT),t.MigrateBackend=c},function(e,t){e.exports=require("winreg")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class i{static compareVersion(e,t){return this.semver.compare(e,t)}static equals(e,t){return this.semver.eq(e,t)}static greaterThenOrEquals(e,t){return this.semver.gte(e,t)}static lowerThen(e,t){return this.semver.lt(e,t)}static clean(e){return this.semver.clean(e)}}i.semver=s(66),t.VersionHelper=i},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(1),r=s(0),o=s(10);class n{constructor(){this.configFileName="installed.config.json"}initialize(e){n.logger.info("Initialize installation state"),n.tierResourcePath=e;try{n.installStateInfo=JSON.parse(o.readFileSync(i.join(e,this.configFileName)).toString()),n.installStateInfo||(n.installStateInfo=[]),n.logger.info(n.installStateInfo)}catch(e){n.logger.info("No installatation state file... creation"),n.installStateInfo=[]}}get stateInfos(){return n.installStateInfo}getStateInfo(e){return n.logger.info(`Getting State info for ${e}`),n.installStateInfo.find(t=>t.package==e)}setStateInfo(e,t){n.logger.info(`set ${e} @ ${t}`);let s=this.getStateInfo(e);s?s.release=t:this.stateInfos.push({package:e,release:t}),this.save()}save(){n.logger.info(`save ${this.configFileName} on ${n.tierResourcePath}`),n.logger.info(n.installStateInfo),o.writeFileSync(i.join(n.tierResourcePath,this.configFileName),JSON.stringify(this.stateInfos,null,2))}}n.logger=r.LoggerService.getLogger(),t.InstallStateConfig=n},function(e,t){e.exports=require("os")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.CanalManager=class{static getcanals(e){return new i(`${e}-in`,`${e}-out`,`${e}-err`,`${e}-and`)}};class i{constructor(e,t,s,i){this.canalIn=e,this.canalOut=t,this.canalErr=s,this.canalEnd=i}}t.ApiCanal=i},function(e,t){e.exports=require("log4js")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(15),r=s(62),o=s(63),n=s(64),a=s(7),c=s(17),l=s(25),h=s(26);t.BackendService=class extends i.AbstractService{constructor(e,t){super(e,t),this.backendStarted=!1,this.reportingStarted=!1,this.migrationStopped=!1;const s=this.configService.config,i=a.get(s,"serviceAddresses.icure",c.IcureBackend.DEFAULT_ADDRESS),g=a.get(s,"serviceAddresses.templating",l.ReportingBackend.DEFAULT_ADDRESS),u=a.get(s,"serviceAddresses.migrationService",h.MigrateBackend.DEFAULT_ADDRESS);this.icureBackendService=new r.IcureService(i,e,t),this.reportingBackendService=new o.ReportingService(g,e,t),this.migrationBackendService=new n.MigrationBackendService(u,e,t)}get migrationRestService(){return this.migrationBackendService}startIcure(){return this.icureBackendService.start()}startIcureIfNotRunning(){return this.icureBackendService.startIfNotRunning()}stopIcure(){return this.icureBackendService.stop()}icureIsAccessible(){return this.icureBackendService.isAccessible()}startReporting(){return this.reportingBackendService.start()}startReportingIfNotRunning(){return this.reportingBackendService.startIfNotRunning()}stopReporting(){return this.reportingBackendService.stop()}reportingIsAccessible(){return this.reportingBackendService.isAccessible()}startMigrationBackend(){return this.migrationBackendService.start()}startMigrationBackendIfNotRunning(){return this.migrationBackendService.startIfNotRunning()}stopMigrationBackend(){return this.migrationBackendService.stop()}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(14),r=s(0),o=s(2),n=s(6);t.AbstractBackendService=class{constructor(e,t){this.backend=e,this.sendProgress=t,this.logger=r.LoggerService.getLogger(),this.configService=new n.ConfigService,this.name=this.backend.name}start(){this.logger.info(`Starting ${this.name} backend in service`);const e=`start-${this.name}`;return this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_BACKEND,substep:e,state:o.Const.STATE_IN_PROGRESS}),this.backend.start().then(t=>(this.logger.info(`----- ${this.name} backend started successfully`),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_BACKEND,substep:e,state:o.Const.STATE_SUCCESS}),i.WorkflowResult.DONE)).catch(t=>{throw this.logger.error(`${this.name} backend failed. Error : ${t}`),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_BACKEND,substep:e,state:o.Const.STATE_FAILURE,errorMessage:t}),t})}startIfNotRunning(){return this.logger.info(`Try to start ${this.name} backend if not running`),this.backend.isRunning().then(e=>e?(this.logger.info(`Skip - ${this.name} backend already started`),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_BACKEND,substep:`start-${this.name}`,state:o.Const.STATE_SUCCESS}),i.WorkflowResult.ALREADY_DONE):(this.logger.info(`${this.name} backend is not running. Need to start the backend.`),this.start()))}stop(){const e=`stop-${this.name}`;return this.logger.info(`try to stop ${this.name} backend`),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_BACKEND,substep:e,state:o.Const.STATE_IN_PROGRESS}),this.backend.stop().then(t=>(this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_BACKEND,substep:e,state:o.Const.STATE_SUCCESS}),i.WorkflowResult.DONE))}isAccessible(){const e=`start-${this.name}`;return this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_BACKEND,substep:e,state:o.Const.STATE_IN_PROGRESS}),this.backend.isRunning().then(t=>(t?this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_BACKEND,substep:e,state:o.Const.STATE_SUCCESS}):this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_BACKEND,substep:e,state:o.Const.STATE_FAILURE}),t))}}},function(e,t){e.exports=require("https")},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("sudo-prompt")},function(e,t){e.exports=require("adm-zip")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0),r=s(3);t.Downloader=class{constructor(){this.logger=i.LoggerService.getLogger()}download(e,t,i){return this.logger.info(`Download ${e} to ${t}`),new Promise((o,n)=>{let a=e.includes("https")?s(47).https:s(47).http,c=r.createWriteStream(t);try{a.get(e,t=>{if(t.statusCode>=200&&t.statusCode<300){t.pipe(c);let s=0;const r=t.headers["content-length"];let a=0;t.on("data",e=>{if(s+=e.length,i){const e=s/r*100;e-a>=1&&(a=e,i(e))}}),c.on("finish",()=>{c.close(),this.logger.info(`Downloaded ${e} successfully. Sum=${s} - Total=${r} - Diff=${r-s}`),r-s==0?o():n(`Failed to download. Downloaded ${s} out of ${r}.`)})}else this.logger.warn(`Failed to download ${e}. Status code : ${t.statusCode}`),n(t.statusCode)}).on("error",s=>{this.logger.error(`Failed to download ${e}. ERROR : ${s.message}`),c.close(),r.unlink(t,e=>{e&&this.logger.error(e.toString())}),n(s.message)})}catch(e){c.close(),this.logger&&e&&this.logger.error(`Failed to download. Error : ${e.toString()}`),n(e)}})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(4),r=s(2),o=s(0),n=s(6),a=s(43),c=s(56);class l extends a.AbstractListenable{constructor(){super(),this.alreadyUpdating=!1,this.prompted=!1,this.logger=o.LoggerService.getLogger(),this.configService=new n.ConfigService,c.autoUpdater.autoInstallOnAppQuit=!0,c.autoUpdater.allowPrerelease=this.configService.config.devMode,c.autoUpdater.setFeedURL({provider:"github",owner:"antoinepairet",repo:"medispring-desktop-releases",releaseType:this.configService.config.devMode?"prerelease":"release"}),c.autoUpdater.on(r.Const.CHECK_FOR_UPDATE,()=>{this.logger.info("MedispringUpdater : checking for update"),this.sendProgress({key:r.Const.CHECK_FOR_UPDATE})}),c.autoUpdater.on(r.Const.UPDATE_AVAILABLE,e=>{this.logger.info("MedispringUpdater : update available"),this.sendProgress({key:r.Const.UPDATE_AVAILABLE})}),c.autoUpdater.on(r.Const.DOWNLOAD_PROGRESS,e=>{this.logger.info("MedispringUpdater : download progress : "+e.percent),this.sendProgress({key:r.Const.DOWNLOAD_PROGRESS,percent:e.percent})})}static getInstance(){return l.medispringUpdater||(l.medispringUpdater=new l),l.medispringUpdater}startBackground(){return new Promise((e,t)=>{c.autoUpdater.removeAllListeners("update-not-available"),c.autoUpdater.removeAllListeners("update-downloaded"),c.autoUpdater.on(r.Const.NO_UPDATE_AVAILABLE,e=>{this.logger.info("MedispringUpdater : no update available"),this.sendProgress({key:r.Const.NO_UPDATE_AVAILABLE})}),c.autoUpdater.on("update-downloaded",e=>{this.logger.info("MedispringUpdater : update finished"),this.prompted||(this.prompted=!0,i.dialog.showMessageBox({type:"info",message:"Une nouvelle mise à jour a été téléchargée, un redémarrage de l'application est requis pour l'appliquer.",buttons:["Fermer l'application","Plus tard"]},(e,t)=>{0==e&&c.autoUpdater.quitAndInstall()}))});setInterval(()=>{try{c.autoUpdater.checkForUpdates()}catch(e){this.logger.error("Erreur lors du check de la mise à jour"),this.logger.error(e)}},3e5)})}check(){return new Promise((e,t)=>{c.autoUpdater.on(r.Const.NO_UPDATE_AVAILABLE,t=>{this.logger.info("MedispringUpdater : no update available"),this.sendProgress({key:r.Const.NO_UPDATE_AVAILABLE}),e(!1)}),c.autoUpdater.on(r.Const.UPDATE_FINISHED,t=>{this.logger.info("MedispringUpdater : update finished downloading"),this.sendProgress({key:r.Const.UPDATE_FINISHED}),e(!0)}),c.autoUpdater.checkForUpdates().catch(t=>{this.logger.warn(`Failed to update Medispring. ${t}`),this.logger.warn("Continue anyway"),e(!1)})})}applyUpdate(){return c.autoUpdater.quitAndInstall(),Promise.resolve()}sendProgress(e){this.emit(r.Const.ELECTRON_UPDATE_INFO,e)}progress(e){try{s(4).BrowserWindow.getAllWindows()[0].setProgressBar(e/100)}catch(e){throw this.logger.error(e),e}}}t.default=l},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(42),r=s(21),o=s(13),n=s(54);t.ConfigModel=class{constructor(e="WIN",t=new h,s=new a,r="",g="",u=!1,d=!1,f=!1,p="",C=!1,E=new c,S=new l,_=i.ReplicationMode.bidirectionnal,m=n.DEFAULT_INSTALLATION_MODE,T=new o.ServiceAddresses){this.OS=e,this.odbc=t,this.taktikCredential=s,this.couchDbPath=r,this.beidPath=g,this.debug=u,this.devMode=d,this.beidInstalled=f,this.medispringPath=p,this.canCreateUser=C,this.eHealthBox=E,this.migration=S,this.replicationMode=_,this.installationType=m,this.serviceAddresses=T}};class a{constructor(e="",t=""){this.groupId=e,this.groupPassword=t}}t.TaktikCredential=a;class c{constructor(e="",t=""){this.eHealthBoxDir=e,this.doneDir=t}}t.EhealthBox=c;class l{constructor(e="",t=4,s=r.MigrationMode.noMigration){this.rootMedi=e,this.threadCount=t,this.migrationMode=s}}t.MigrationConfig=l;class h{constructor(e=!1,t="",s="",i="",r="",o="",n="",a="",c="",l="",h=!1){this.isRemote=e,this.name=t,this.driver=s,this.database=i,this.password=r,this.pathToData=o,this.server=n,this.username=a,this.port=c,this.wdd=l,this.manualConfig=h}}t.OdbcRegisterEntry=h},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.unidirecional="uni",e.bidirectionnal="bi"}(t.ReplicationMode||(t.ReplicationMode={}))},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(55);t.AbstractListenable=class{constructor(){this.emitter=new i.EventEmitter,this.on=((e,t)=>{this.emitter.on(e,t)}),this.onAll=(e=>{this.emitter.on("all",e)}),this.emit=((e,...t)=>{this.emitter.emit(e,t),this.emitter.emit("all",Object.assign({key:e},t))})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(61);t.UpdateConfig=class{constructor(){this.version="0.0.0",this.files=[],this.fileDownloaderInfo=new i.FileDownloaderInfo}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0),r=s(46),o=s(2),n=s(5),a=s(28),c=s(29);t.MsiInstaller=class{constructor(e,t,s,r,n=""){if(this.installerPath=e,this.propertyId=t,this.platform=s,this.arch=r,this.appName=n,this.logger=i.LoggerService.getLogger(),this.installConfig=new c.InstallStateConfig,s!=o.Const.WIN)throw new Error(`${s} cannot install msi file`)}install(e){return new Promise((t,s)=>{this.logger.info(`${this.appName} uninstall if necessary`),(this.isInstalled()?this.uninstall():Promise.resolve()).then(()=>{this.logger.info(`${this.appName} installation started`);const i=`msiexec /i "${this.installerPath}" TARGETDIR="${e}" /qn`;this.logger.info(`executing : ${i}`),n.exec(i).on("exit",(e,i)=>{this.logger.info(`${this.appName} installation end with code ${e}`),0==e?t(e):s(e)})})})}update(e,t){return this.logger.info(`Checking ${this.appName} version`),this.version().then(e=>{if(this.logger.info("actual version : "+e),!e||a.VersionHelper.equals(e,t))return this.logger.info(`Last version of ${this.appName} already installed`),0;{this.logger.info(`Update ${this.appName} version ${e} to ${t}`);const s=`msiexec /fd "${this.installerPath}" /qn`;this.logger.info(`executing : ${s}`),n.exec(s).on("exit",(e,s)=>{const i=`${this.appName} update end with code ${e}`;if(this.logger.info(i),0==e)return this.installConfig.setStateInfo(this.appName,t),e;throw new Error(i)})}}).catch(()=>(this.logger.info(`${this.appName} is not installed`),this.install(e).then(e=>(this.logger.info(`${this.appName} is now installed`),this.installConfig.setStateInfo(this.appName,t),e)).catch(e=>{throw this.logger.error("error while installing... or in exit handler... Error :"),this.logger.error(e),new Error(e)})))}uninstall(){const e=`msiexec /X ${this.propertyId} /q`;return this.logger.info(`Executing uninstall : ${e}`),new Promise((t,s)=>{n.exec(e).on("exit",()=>{t()})})}isInstalled(){return r.RegistryHelper.checkIfSoftIsInstalled(s(27).HKLM,this.propertyId)}version(){return new Promise((e,t)=>{const s=this.installConfig.getStateInfo(this.appName);this.logger.info(`Current version installed: ${JSON.stringify(s)||"NONE INSTALLED"}`),s?e(s.release):t()})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0);class r{static checkIfSoftIsInstalled(e,t){return r.checkIfPathExists(e,`\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${t}`)}static checkIfPathExists(e,t){return r.logger.info(`Checking if ${t} is installed`),new Promise((i,o)=>{new(s(27))({hive:e,key:t}).values((e,t)=>{r.logger.info("installed ? "+(!e&&!!t&&t.length>0)),e?i(!1):t&&0!=t.length?i(!0):i(!1)})})}}r.logger=i.LoggerService.getLogger(),t.RegistryHelper=r},function(e,t){e.exports=require("follow-redirects")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(1),r=s(93),o=s(2),n=s(4);t.ElectronUtils=class{static get basePath(){let e;return e="production"===s(49).name?i.join(process.resourcesPath+"","resources"):"resources"}static get tierResourcePath(){return s(30).platform()==o.Const.WIN?i.join("C:\\Medispring","resources"):n.app.getPath("userData")}static getSystemInfo(){let e=s(30),t=e.platform(),i=e.arch(),o=this.tierResourcePath,n=this.basePath;return new r.SystemInfo(n,o,t,i)}}},function(e){e.exports={name:"production",startURL:"https://setup.medispring.be",mainURL:"https://app.medispring.be",qaURL:"https://qa.medispring.be",description:"Add here any environment specific stuff you like."}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(4),r=s(7),o=s(1),n=s(51),a=s(2),c=s(11),l=s(48),h=s(19),g=s(97),u=s(100),d=s(101),f=s(17),p=s(25),C=s(102),E=s(6),S=s(29),_=s(0),m=s(16),T=s(49),P=[];let A;const D=l.ElectronUtils.getSystemInfo();_.LoggerService.configure(D.tierResourcePath);const w=_.LoggerService.getLogger();w.info("version : "+i.app.getVersion());const I=new E.ConfigService;let v;try{I.initialize(D),v=I.config,w.info("Config : "),w.info(v)}catch(e){w.error(`could not initialize configService ${e}`),P.push(`Problème avec de fichier de config. ${e}`),v=null}process.on("uncaughtException",e=>{w.error(e),P.push(`Uncaught exception occurred : ${e.message}`)}),(new m.UpdateConfigService).initialize(D),(new S.InstallStateConfig).initialize(D.tierResourcePath),h.FileHelper.createDirectoryIfNotExists(D.tierResourcePath),v&&v.medispringPath&&h.FileHelper.createDirectoryIfNotExists(o.join(v.medispringPath,"PKI")),s(104)().then(e=>{w.info(`Is admin? ${e}`)});const b=v&&v.devMode?T.qaURL:T.mainURL,R=T.startURL;if("production"!==T.name){const e=i.app.getPath("userData");i.app.setPath("userData",`${e} (${T.name})`)}const N=r.get(v,"serviceAddresses.icure",f.IcureBackend.DEFAULT_ADDRESS),y=r.get(v,"serviceAddresses.templating",p.ReportingBackend.DEFAULT_ADDRESS);function O(e){try{new C.ProxyServer(e).startListening().on("error",e=>{w.error(e),P.push(`Failed to create proxy. ${e}`)})}catch(e){w.error(e),P.push(`Failed to create proxy. ${e}`)}}let U;N.isRemote&&O(N),y.isRemote&&O(y);const k=i.app.requestSingleInstanceLock();function B(){w.info("close app"),A&&A.stop(),c.DialogUtils.appIsClosed=!0,w.info("--------------------------- App close"),i.app.quit()}i.app.on("second-instance",(e,t)=>{U&&(U.isMinimized()&&U.restore(),U.focus())}),k?i.app.on("ready",()=>{if(0===P.length)(()=>{const e=[d.editMenuTemplate];e.push(u.devMenuTemplate),i.Menu.setApplicationMenu(i.Menu.buildFromTemplate(e))})(),global.icureAddress=N,(U=g.default("main",{center:!0,show:!1,webPreferences:{nodeIntegration:!1,preload:o.join(__dirname,"preload.js")}})).maximize(),U.show(),A=new n.ApiListeners(U,D),"development"===T.name&&U.webContents.openDevTools(),w.info(`Go to : ${R}`),U.loadURL(R);else for(const e of P)c.DialogUtils.showFatal(e)}):i.app.quit(),i.ipcMain.on(a.Const.GO_TO_MAIN,()=>{w.info(`Go to : ${b}`),U&&U.loadURL(b)}),i.ipcMain.on(a.Const.CANAL_KILL,(e,t)=>{B()}),i.app.on("window-all-closed",()=>{B()}),process.on("SIGINT",()=>{w.info("SIGINT"),B()}),process.on("SIGTERM",()=>{w.info("SIGTERM"),B()})},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(52),r=s(53),o=s(57),n=s(58),a=s(59),c=s(88),l=s(91),h=s(94),g=s(95);t.ApiListeners=class{constructor(e,t){this.window=e,this.systemInfo=t,this.workflowApi=new a.WorkflowListener(e,t),this.listeners=[new i.TestListener(e),new r.ElectronUpdaterListener(e),new o.ConfigListener(e),new n.FileListener(e),this.workflowApi,new c.EHealthBoxListener(e),new g.P12Listener(e),new l.PrinterListener(e),new h.ApplicationListener(e)]}set browserWindow(e){this.listeners.forEach(t=>t.browserWindow=e)}stop(){this.workflowApi.stop()}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(18),r=s(8);t.TestListener=class extends r.AbstractApiListener{constructor(e){super("test",e),this.functionToCall=(e=>(this.logger.info(`This function has been called with argument : ${e}`),new i.Observable(t=>{let s=0;setInterval(()=>{t.next(s++),s!=e&&10!=s||t.complete()},500)}))),this.promiseToCall=(e=>(this.logger.info(`This promise has been called with argument : ${e}`),this.logger.info("This promise responded : 42"),new Promise(e=>{setTimeout(()=>e(42),5e3)}))),this.logger.info("Test listener created"),this.setupObservable(this.getCanal("test"),this.functionToCall)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(8),r=s(4),o=s(18),n=s(40),a=s(2);t.ElectronUpdaterListener=class extends i.AbstractApiListener{constructor(e){super("electron-updater",e),this.updater=n.default.getInstance(),this.checkUpdates=(()=>(this.logger.info("Called electronUpdater to check updates"),o.Observable.create(e=>{this.updater.onAll(t=>{e.next(t[0])}),this.updater.check().then(()=>e.complete())}))),this.apply=(()=>this.updater.applyUpdate()),this.end=(()=>(this.logger.info("Called electronUpdater end process"),r.ipcMain.emit(a.Const.ELECTRON_UPDATE_FINISHED),Promise.resolve())),this.setupObservable(this.getCanal("checkUpdates"),this.checkUpdates),this.setupPromise(this.getCanal("apply"),this.apply),this.setupPromise(this.getCanal("end"),this.end)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_INSTALLATION_MODE="full"},function(e,t){e.exports=require("events")},function(e,t){e.exports=require("electron-updater")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(8),r=s(6);t.ConfigListener=class extends i.AbstractApiListener{constructor(e){super("config",e),this.configService=new r.ConfigService,this.getConfig=(()=>Promise.resolve(this.configService.config)),this.setConfig=(e=>(this.configService.config=e[0],Promise.resolve(!0))),this.configIsValid=(e=>{const t=e[0];return Promise.resolve(this.configService.configIsValid(t))}),this.setupPromise(this.getCanal("getConfig"),this.getConfig),this.setupPromise(this.getCanal("setConfig"),this.setConfig),this.setupPromise(this.getCanal("configIsValid"),this.configIsValid)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(8),r=s(19);t.FileListener=class extends i.AbstractApiListener{constructor(e){super("file",e),this.chooseDirectory=(()=>r.FileHelper.chooseDirectory()),this.setupPromise(this.getCanal("chooseDirectory"),this.chooseDirectory)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(8),r=s(4),o=s(18),n=s(14),a=s(2);t.WorkflowListener=class extends i.AbstractApiListener{constructor(e,t){super("workflow",e),this.start=(()=>o.Observable.create(e=>{this.workflow.onAll(t=>{e.next(t[0])}),this.workflow.start().then(()=>e.complete()).catch(t=>{this.logger.error(t),e.error(t)})})),this.stop=(()=>(this.workflow.stop(),Promise.resolve(!0))),this.end=(()=>(r.ipcMain.emit(a.Const.GO_TO_MAIN),Promise.resolve(!0))),this.createDefaultUser=(()=>this.workflow.createDefaultUser()),this.platform=t.platform,this.workflow=new n.Workflow(t),this.setupObservable(this.getCanal("start"),this.start),this.setupPromise(this.getCanal("stop"),this.stop),this.setupPromise(this.getCanal("end"),this.end),this.setupPromise(this.getCanal("createDefaultUser"),this.createDefaultUser),this.setupPromise(this.getCanal("getInstallableSoftwares"),this.getInstallableSoftwares.bind(this))}getInstallableSoftwares(){return this.workflow.getInstallableSoftwares()}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(15),r=s(2),o=s(14),n=s(33),a=s(65),c=s(11),l=s(7);t.CouchDBService=class extends i.AbstractService{constructor(e,t){super(e,t),this._couchDbPath="",this.backendService=new n.BackendService(e,t);const s=l.get(this.configService.config,"serviceAddresses.couchDb",a.CouchDB.DEFAULT_ADDRESS);this.couchDB=new a.CouchDB(s,e)}config(){return this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_CONFIG,state:r.Const.STATE_IN_PROGRESS}),this.logger.info("Start CouchDB configuration"),this.couchDB.createCouchdbUser(this.couchDbPath).then(()=>(this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_CONFIG,state:r.Const.STATE_SUCCESS}),this.logger.info("CouchDB is successfully configured"),Promise.resolve(o.WorkflowResult.DONE)),e=>(this.logger.error(`CouchDB configuration failure. Error : ${e}`),this.logger.error("Need to start the application as admin"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_CONFIG,state:r.Const.STATE_FAILURE,errorCode:"4.1"}),c.DialogUtils.showError("Veuillez relancer l'installation en administrateur"),Promise.reject(e)))}finalize(e,t){return this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_FINALISE,state:r.Const.STATE_IN_PROGRESS}),this.logger.info("Start CouchDB finalise configuration"),this.couchDB.finalize(this.systemInfo.basePath,e,t).then(e=>(this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_FINALISE,state:r.Const.STATE_SUCCESS}),e?(this.logger.info("CouchDB finalise configuration successfully. The replication was already done"),o.WorkflowResult.ALREADY_DONE):(this.logger.info("CouchDB finalise configuration successfully"),o.WorkflowResult.DONE)),e=>(this.logger.error(`CouchDB finalise failure. Error : ${e}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_FINALISE,state:r.Const.STATE_FAILURE,errorCode:"4.2",errorMessage:e}),c.DialogUtils.showError(`Une erreur est survenue : ${e}`),Promise.reject(e)))}createDefaultIcureUser(e){return this.logger.info("Creating the default ICURE user"),this.couchDB.createDefaultIcureUser(this.systemInfo.basePath,e.groupId).then(e=>(this.logger.info("Creating default ICURE user successfully"),e))}checkDataReplication(e){return this.logger.info("Start checking if a replication is running"),this.couchDB.replicationIsFinished(e).then(e=>e?(this.logger.info(`No replication are running at ${(new Date).toISOString()}`),o.WorkflowResult.DONE):(this.logger.warn(`A replication is running at ${(new Date).toISOString()}`),o.WorkflowResult.NOT_FINISHED))}waitForReplication(e){return this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.WAIT_REPLICATION,state:r.Const.STATE_IN_PROGRESS}),this.logger.info("Start waiting for the replication to finished"),new Promise((t,s)=>{let i=setInterval(()=>{this.logger.info("Check replication"),this.checkDataReplication(e).then(e=>{e==o.WorkflowResult.DONE&&(this.logger.info("The replication is finished"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.WAIT_REPLICATION,state:r.Const.STATE_SUCCESS}),clearInterval(i),t())},e=>{this.logger.error(`Replication failed. Error : ${e}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.WAIT_REPLICATION,state:r.Const.STATE_FAILURE,errorMessage:e,errorCode:"4.3"}),clearInterval(i),s(e)})},15e3)})}cancelReplicationTasks(){return this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.CANCEL_REPLICATION,state:r.Const.STATE_IN_PROGRESS}),this.logger.info("Try to cancel the replication process"),this.couchDB.cancelReplicationTasks().then(e=>e?(this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.CANCEL_REPLICATION,state:r.Const.STATE_SUCCESS}),this.logger.info("Replication process successfully canceled"),Promise.resolve(o.WorkflowResult.DONE)):(this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.CANCEL_REPLICATION,state:r.Const.STATE_FAILURE,errorCode:"4.4"}),this.logger.error("Replication process failed to stop. It's still running"),Promise.reject("Replication process failed to stop. It's still running")))}checkIfIndexerFinished(){return this.logger.info("Check if indexers are running"),this.couchDB.indexersFinished().then(e=>(e?this.logger.info(`No indexers are running at ${(new Date).toISOString()}`):this.logger.warn(`An indexers is running at ${(new Date).toISOString()}`),e))}waitForIndexes(){return this.logger.info("Start waiting for indexers to stop"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.WAIT_INDEXING,state:r.Const.STATE_IN_PROGRESS}),new Promise((e,t)=>{let s=setInterval(()=>{this.logger.info("check indexes"),this.checkIfIndexerFinished().then(t=>{t&&(this.logger.info(`Indexers finished at at ${(new Date).toISOString()}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.WAIT_INDEXING,state:r.Const.STATE_SUCCESS}),clearInterval(s),e())},e=>{this.logger.error(`Failed to check indexers states. Error : ${e}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.WAIT_INDEXING,state:r.Const.STATE_FAILURE,errorMessage:e,errorCode:"4.5"}),clearInterval(s),t(e)})},15e3)})}updateCouchDb(){this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_UPDATE,state:r.Const.STATE_IN_PROGRESS}),this.logger.info("Start updating CouchDB");let e=this.systemInfo.platform==r.Const.WIN?this.couchDbPath:this.systemInfo.basePath;return this.couchDB.update(e).then(()=>(this.logger.info("CouchDB successfully updated"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_UPDATE,state:r.Const.STATE_SUCCESS}),Promise.resolve(o.WorkflowResult.DONE)),e=>(this.logger.error(`CouchDB failed to update. Error : ${e}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_UPDATE,state:r.Const.STATE_FAILURE,errorMessage:e,errorCode:"4.6"}),Promise.reject(e)))}createTables(){return this.logger.info("Start creating couchDB tables"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.CREATE_TABLES,state:r.Const.STATE_IN_PROGRESS}),new Promise((e,t)=>{this.couchDB.tablesExist().then(s=>{s?(this.logger.info("Tables are already created"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.CREATE_TABLES,state:r.Const.STATE_SUCCESS}),e(!0)):(this.logger.info("Tables don't exists. Starting backend to create them"),this.backendService.stopIcure().then(s=>{this.backendService.startIcure().then(t=>{this.backendService.stopIcure().then(t=>{this.logger.info("CouchDB tables successfully created"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.CREATE_TABLES,state:r.Const.STATE_SUCCESS}),e(!0)})},e=>{this.logger.error(`CouchDB failed creating tables. Error : ${e}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.CREATE_TABLES,state:r.Const.STATE_FAILURE,errorCode:"4.7",errorMessage:e}),c.DialogUtils.showError("Erreur lors de la création des tables de la base de données."),t(!1)})}))},e=>{this.logger.error(`CouchDB failed checking if tables exists. Error : ${e}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.CREATE_TABLES,state:r.Const.STATE_FAILURE,errorMessage:e,errorCode:"4.8"}),c.DialogUtils.showError("Erreur lors de la vérification des tables de la base de données."),t(e)})})}checkCouchDbLaunched(){return this.logger.info("Check if CouchDB is running"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_LAUNCHED,state:r.Const.STATE_IN_PROGRESS}),this.couchDB.tryIsRunning().then(e=>e?(this.logger.info("CouchDB is running"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_LAUNCHED,state:r.Const.STATE_SUCCESS}),Promise.resolve(o.WorkflowResult.DONE)):(this.logger.error(`CouchDB is not running at ${(new Date).toISOString()}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_LAUNCHED,state:r.Const.STATE_FAILURE,errorCode:"4.9"}),c.DialogUtils.showError("CouchDB n'a pas démarré pour des raisons inconnues"),Promise.reject(o.WorkflowResult.FAIL)),e=>(this.logger.error(`CouchDB is not running at ${(new Date).toISOString()}. Error : ${e}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_COUCH_DB,substep:r.Const.COUCH_DB_LAUNCHED,state:r.Const.STATE_FAILURE,errorCode:"4.10",errorMessage:e}),c.DialogUtils.showError(`Une erreur est survenue : ${e}`),Promise.reject(e)))}get couchDbPath(){return this._couchDbPath}set couchDbPath(e){this._couchDbPath=e}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.FileDownloaderInfo=class{constructor(e="github",t,s,i,r){this.type=e,this.owner=t,this.repository=s,this.releaseType=i,this.bucket=r}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(34),r=s(17);t.IcureService=class extends i.AbstractBackendService{constructor(e,t,s){super(new r.IcureBackend(e,t),s)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(34),r=s(25);t.ReportingService=class extends i.AbstractBackendService{constructor(e,t,s){super(new r.ReportingBackend(e,t),s)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(34),r=s(26),o=s(12);t.MigrationBackendService=class extends i.AbstractBackendService{constructor(e,t,s){super(new r.MigrateBackend(e,t),s)}checkConfiguration(){const e=this.backend.address,t={host:e.host,port:e.port,path:"/patient?WhereOrderLimitClause=LIMIT+1",method:"GET"};return o.HttpUtils.request(t,null,!0).then(e=>(this.logger.info(`Asking /patients got the code: ${e}`),e>=200&&e<300))}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(1),r=s(2),o=s(5),n=s(3),a=s(7),c=s(12),l=s(0),h=s(45),g=s(67),u=s(68),d=s(29),f=s(16),p=s(6),C=s(42),E=s(13),S=s(28);class _{constructor(e,t){if(this.address=e,this.systemInfo=t,this.propertyId="{4CD776E0-FADF-4831-AF56-E80E39F34CFC}",this.authorizationHeader="Basic aWN1cmU6UzNjbHVkM2RNQHgxbUA=",this.configService=new p.ConfigService,this.logger=l.LoggerService.getLogger(),this.updateConfigService=new f.UpdateConfigService,this.installConfig=new d.InstallStateConfig,this.macExecutePath=i.join(this.systemInfo.tierResourcePath,"Apache CouchDB"),this.systemInfo.platform==r.Const.WIN&&this.systemInfo.arch==r.Const.X64){this.installerFile="couchdb.msi";const e=i.join(t.tierResourcePath,this.installerFile);this.installer=new h.MsiInstaller(e,this.propertyId,this.systemInfo.platform,this.systemInfo.arch,r.Const.COUCH_DB_FULL_NAME)}else{if(this.systemInfo.platform!=r.Const.MAC){const e=`Platform or architecture not supported. Plat=${this.systemInfo.platform} - Arch=${this.systemInfo.arch}`;throw this.logger.error(e),new Error(e)}this.installerFile="couchdb.msi",this.installer=new g.MacCouchDBExecuter(this.systemInfo.tierResourcePath,this.macExecutePath,r.Const.COUCH_DB_FULL_NAME)}}isRunning(){return this.logger.info(`Checking if CouchDb is running at ${this.address.host}:${this.address.port}`),c.HttpUtils.getData(this.address.host,"",this.address.port).then(e=>(this.logger.info(`CouchDB is version ${e.version}`),!0)).catch(e=>(this.logger.error(`CouchDB failed to get version. ERROR : ${e}`),!1))}start(){return Promise.resolve()}stop(){return Promise.resolve()}version(){return this.installer.version()}install(e,t){return this.installer.install(e).then(()=>{this.installConfig.setStateInfo(r.Const.COUCH_DB_FULL_NAME,t)})}update(e){return this.address.isRemote?this.isRunning().then(e=>{if(!e){const e=`CouchDB is not running at ${this.address.host}:${this.address.port}`;throw this.logger.error(e),new Error(e)}this.logger.warn("Cannot check version for couchDB on remote. It might not be up to date.")}):this.installer.isInstalled().then(t=>{this.logger.info(`CouchDB is installed ? ${t}`);const s=this.updateConfigService.getUpdateFileInfo(this.installerFile);return this.logger.info(`The version should be : ${s.release}`),t?this.version().then(t=>{if(this.logger.info("Installed version : "+t),!S.VersionHelper.equals(t,s.release))return this.logger.info("CouchDB must be updated"),this.installer.update(e,s.release)}):this.install(e,s.release)})}finalize(e,t,s){const r=s==C.ReplicationMode.bidirectionnal?"replication-bidirectional.json":"replication-unidirectional.json";let o=n.readFileSync(i.join(e,"couchdb",r),"utf-8");const a=this.createTaktikUrl(t);o=o.replace(/\$\$taktik\$\$/g,a);let c=!1;return this.getDocumentRevision("icure-config","ae9d6c0c-3995-4984-9d6c-0c3995598467").then(e=>(c=!!e,this.putDocument(o,"icure-config","ae9d6c0c-3995-4984-9d6c-0c3995598467",e))).then(()=>c)}createTaktikUrl(e){if(!e.groupId||!e.groupPassword)throw new Error("tk credentials required");const t=e.groupId.trim(),s=`https://${t}:${e.groupPassword.trim()}@couch.prd.icure.cloud:443/icure-${t}`;return this.logger.info(`URL TAKTIK = ${s}`),s}putDocument(e,t,s,i=null){this.logger.info(`Try to import document : ${s}`);const r={host:this.address.host,port:this.address.port,path:`/${t}/${s}`,method:"PUT",headers:{"Content-Type":"application/x-www-form-urlencoded","Content-Length":Buffer.byteLength(e),Authorization:this.authorizationHeader}};return i&&(r.headers["If-Match"]=i),c.HttpUtils.request(r,e).then(e=>{if(e.error)throw this.logger.warn(`Failed to put document : ${s}. Error :${e}`),new Error(e);return this.logger.info(`Successfully import document : ${s}`),!0})}getDocumentRevision(e,t){this.logger.info(`Get revision for ${t}`);const s={host:this.address.host,port:this.address.port,path:`/${e}/${t}`,method:"HEAD",headers:{Authorization:this.authorizationHeader}};return c.HttpUtils.request(s,null,!1,!0).then(e=>{const s=a.get(e,"etag");return s?this.logger.info(`${t} has the revision : ${s}`):this.logger.info(`${t} does not exists.`),s})}documentExists(e,t){return this.logger.info(`Checking if document ${t} exists in couchDB`),c.HttpUtils.getData(this.address.host,`/${e}/${t}`,this.address.port).then(e=>(this.logger.info(`Document ${t} exists response :`),this.logger.info(e),!e.error))}createCouchdbUser(e){let t="icure = -pbkdf2-03169e871f3ef7112d7efcc779f46e071a988580,fab55473ed18a5a602aa14e013e8c339,10";if(this.systemInfo.platform==r.Const.WIN)return new Promise((n,a)=>{try{let c=this.getCouchDbPath(e);const l=i.join(c,"etc","local.ini");let h=s(3),g=h.readFileSync(l,"UTF-8");if(g.indexOf("icure")<0){g=g.replace(/\n\[admins]/g,`\n[admins]\n${t}\n`);try{h.writeFileSync(l,g)}catch(e){this.logger.error('Failed to write the "icure" user in CouchDB'),a(e)}this.systemInfo.platform==r.Const.WIN&&(this.logger.info('Restarting "Apache CouchDB" service'),o.execSync('net stop "Apache CouchDB"'),o.execSync('net start "Apache CouchDB"'))}n()}catch(e){this.logger.error(`Error while creating the couchdb user. Error : ${e}`),a(e)}});{const e=new u.CouchDBLocalFile,i=s(24);this.logger.info("Create the process for MAC"),e.create(this.systemInfo.basePath,t,i.sync()),this.installer.launch(this.systemInfo.basePath);const r=30;return this.tryIsRunning(r,2e3).then(e=>{if(!e)throw new Error(`CouchDB is not running after ${r} tries`)})}}createDefaultIcureUser(e,t){this.logger.info("Creating default user for ICURE");let s=[this.addDefaultDocument(i.join(e,"couchdb","default_user.json"),"idUser_DEFAULT",t),this.addDefaultDocument(i.join(e,"couchdb","default_hcp.json"),"idHcp_DEFAULT",t)];return Promise.all(s).then(e=>(this.configService.config.canCreateUser=!1,this.configService.save(),e))}addDefaultDocument(e,t,s){this.logger.info(`Reading default for ${t}`);let i=n.readFileSync(e,"utf-8");return i=i.replace(/\$\$groupId\$\$/g,s),this.documentExists("icure-base",t).then(e=>!!e||this.putDocument(i,"icure-base",t))}replicationIsFinished(e){const t=[this.countIcureBase(),this.replicationJobIsRunning(e)];return Promise.all(t).then(e=>{const t=e[0],s=e[1];return t>8e4&&!s})}cancelReplicationTasks(){const e={host:this.address.host,port:this.address.port,path:"/_active_tasks",method:"GET",headers:{Accept:"application/json",Authorization:this.authorizationHeader}};return c.HttpUtils.request(e).then(e=>{e=e.filter(e=>"replication"==e.type);let t=[];return this.logger.info(e.length+" replication in progress"),e.forEach(e=>{t.push(this.cancelReplicationTask(e.replication_id))}),Promise.all(t)}).then(e=>!e.some(e=>!e))}indexersFinished(){const e={host:this.address.host,port:this.address.port,path:"/_active_tasks",method:"GET",headers:{Accept:"application/json",Authorization:this.authorizationHeader}};return c.HttpUtils.request(e).then(e=>{let t=0==(e=e.filter(e=>"indexer"==e.type)).length||!e.filter(e=>"indexer"==e.type).some(e=>100!=e.progress);return this.logger.info("indexer finished to index : "+t),t})}tablesExist(){let e={host:this.address.host,port:this.address.port,path:"/_all_dbs",method:"GET",headers:{Accept:"application/json"}};return c.HttpUtils.request(e).then(e=>e.indexOf("icure-base")>=0&&e.indexOf("icure-config")>=0&&e.indexOf("icure-healthdata")>=0&&e.indexOf("icure-patient")>=0)}tryIsRunning(e=5,t=5e3){return new Promise((s,i)=>{this.isRunning().then(r=>{r?s(!0):0!==e?(this.logger.warn(`CouchDB is not running. ${e} tries remaining`),setTimeout(()=>this.tryIsRunning(e-1).then(s,i),t)):s(!1)}).catch(e=>i(e))})}cancelReplicationTask(e){this.logger.info("Cancel replication : "+e);let t=JSON.stringify({id:e,cancel:!0});const s={host:this.address.host,port:this.address.port,path:"/_replicate",method:"POST",headers:{"Content-Type":"application/json","Content-Length":Buffer.byteLength(t),Authorization:this.authorizationHeader}};return c.HttpUtils.request(s,t).then(e=>e.ok)}getCouchDbPath(e){const t=i.join("etc","local.ini"),r=s(3),o=i.join(e,"CouchDB",t),n=i.join(e,t);if(r.existsSync(o))return this.logger.info(`${o} exists`),i.join(e,"CouchDB");if(r.existsSync(n))return this.logger.info(`${i.join(e,t)} exists`),e;throw new Error(`CouchDB is not installed at ${e}`)}replicationJobIsRunning(e){return new Promise((t,s)=>{let i={host:this.address.host,port:this.address.port,path:"/_active_tasks",method:"GET",headers:{Accept:"application/json",Authorization:this.authorizationHeader}};c.HttpUtils.request(i).then(s=>{t(s.filter(e=>"replication"==e.type).some(t=>0!=t.changes_pending&&(null!=t.changes_pending||!e)))}).catch(e=>{this.logger.error(`Error while checking for replication. Error : ${e}`),t(!1)})})}countIcureBase(){return c.HttpUtils.getData(this.address.host,"/icure-base",this.address.port).then(e=>e.doc_count)}}_.DEFAULT_ADDRESS=new E.ServiceAddress(r.Const.COUCH_DB_DEFAULT_PORT),t.CouchDB=_},function(e,t){e.exports=require("semver")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(5),r=s(0),o=s(1),n=s(16),a=s(2);t.MacCouchDBExecuter=class{constructor(e,t,s){this.tierResourcePath=e,this.execPath=t,this.execName=s,this.logger=r.LoggerService.getLogger(),this.loggerCouchDB=r.LoggerService.getLogger(a.Const.COUCH_DB),this.prc=null,this.updateConfig=new n.UpdateConfigService}install(e,t=!1){return Promise.resolve(0)}extract(e,t){this.logger.info(`Extract ${t} to ${e}`);let i=s(38);this.logger.info(o.join(this.tierResourcePath,"mac_couchdb.zip"));let r=new i(o.join(this.tierResourcePath,"mac_couchdb.zip"));this.logger.info(t),r.extractAllTo(e,!0)}uninstall(){return Promise.resolve()}update(e,t){return this.install(e)}version(){return Promise.resolve("0")}isInstalled(){return Promise.resolve(!1)}stop(){return this.logger.info("stopping couchdb..."),new Promise((e,t)=>{let i=s(22);if(this.prc){if(this.prc.kill(),!this.prc.killed)throw new Error("CouchDB could not be stopped")}else i.lookup({command:/.*(Apache CouchDB).*/g},(t,s)=>{t?e():s.forEach(t=>{t&&i.kill(t.pid,e=>{this.logger.warn(`Impossible de kill ${t.pid}`)}),e()})})})}launch(e){return this.logger.info("Try to simple execute"),new Promise((t,s)=>{try{i.exec("pwd",(s,r)=>{this.loggerCouchDB.info(`Starting couchdb from ${r}\n`),this.logger.info(`Starting couchdb from ${r}\n`);const n=o.join(e,this.execName,"bin","couchdb");this.logger.info(`Executing : ${n}`),this.prc=i.spawn(n,[],{detached:!0}),this.prc.on("SIGINT",function(){console.log("just ignore SIGINT")}),this.prc.on("close",e=>{this.logger.info(`${this.execName} process exit code ${e}`),t(e)}),this.prc.stdout&&(this.loggerCouchDB.info("LOG STDOUT OK"),this.prc.stdout.on("data",e=>{e&&this.loggerCouchDB.info(e.toString("UTF-8"))})),this.prc.stderr&&(this.loggerCouchDB.info("LOG STDERR OK"),this.prc.stderr.on("data",e=>{e&&this.loggerCouchDB.warn(e.toString("UTF-8"))}))})}catch(e){this.logger.error(e),this.loggerCouchDB.error(e),s(e)}})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(1),r=s(0);t.CouchDBLocalFile=class{constructor(){this.logger=r.LoggerService.getLogger()}create(e,t,r){try{const o=i.join(e,"Apache CouchDB","etc","local.ini");this.logger.info("Creating couchDb local file for : "+r),this.logger.info(`Base path : ${e}`),this.logger.info(`Destination path : ${o}`);let n=s(3),a=n.readFileSync(o,"UTF-8");a=(a=(a=a.replace(/%USERNAME%/g,r||"")).replace(/%USER_PASSWORD%/g,t)).replace(/%UUID%/g,s(69)()),this.logger.info("Content to write :"),this.logger.info(a),n.writeFileSync(o,a),this.logger.info("end create")}catch(e){throw this.logger.error(`Creating couchDb local file failed. Error : ${e}`),new Error(e)}}}},function(e,t){e.exports=require("uuid/v4")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(15),r=s(2),o=s(14),n=s(1),a=s(5),c=s(3),l=s(0),h=s(19),g=s(11),u=s(12),d=s(4),f=s(21),p=s(7),C=s(26);t.MigrateService=class extends i.AbstractService{constructor(e,t){super(e,t),this.migrationLogger=l.LoggerService.getLogger(r.Const.MIGRATION_BACKEND),this.CSV_FILE="ExportAuteurs.csv";const s=this.configService.config;if(this.migrateServiceAddress=p.get(s,"serviceAddresses.migrationService",C.MigrateBackend.DEFAULT_ADDRESS),this.migrateServiceAddress.isRemote)throw new Error("Cannot do a migration with migrationService on remote")}start(e){const t=this.configService.config;this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.START_MIGRATION,state:r.Const.STATE_IN_PROGRESS});const s=t.medispringPath;h.FileHelper.createDirectoryIfNotExists(n.join(s,"logs")),h.FileHelper.createDirectoryIfNotExists(n.join(s,"temp")),this.logger.info("Start migration");const i=["-Xms1024m","-Xmx4096m",`-Dport=${this.migrateServiceAddress.port}`,"-jar",n.join(this.systemInfo.tierResourcePath,"icure-reprise.jar"),`${t.taktikCredential.groupId}`];e==f.MigrationMode.testMigration?i.push("TEST200"):t.debug?i.push("DEBUG"):i.push("FULL"),i.push(t.migration.rootMedi),i.push(t.migration.threadCount.toString());const c=n.join(this.systemInfo.tierResourcePath,"java","win32-x64","bin","java.exe");this.logger.info("Creating migration child process"),this.logger.info(`Executing : ${c} ${i.join(" ")}`);const l=a.spawn(c,i,{detached:!0});return new Promise((e,t)=>{l.stdout.on("data",e=>{e&&this.migrationLogger.info(e.toString())}),l.stderr.on("data",e=>{e&&this.migrationLogger.error(e.toString())}),l.on("close",s=>{try{0!=s&&s?(this.logger.error(`Migration failure. Exit code : ${s}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.START_MIGRATION,state:r.Const.STATE_FAILURE,errorCode:`3.${s}`}),g.DialogUtils.showError(`Une erreur est survenue lors de la migration. Exit code : ${s}`),t(o.WorkflowResult.FAIL)):(this.logger.info("Migration finished successfully"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.START_MIGRATION,state:r.Const.STATE_SUCCESS}),e(o.WorkflowResult.DONE))}catch(e){this.logger.error(`Migration process exception : ${e.toString()}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.START_MIGRATION,state:r.Const.STATE_FAILURE,errorMessage:e.toString()}),t(e)}})})}finalise(){let e=this.configService.config;return p.get(e,"migration.migrationMode")==f.MigrationMode.fullMigration&&(e.canCreateUser=!1,e.migration.migrationMode=f.MigrationMode.neverDoMigration),this.configService.save(),Promise.resolve(!0)}checkIfCSVshouldBeCreated(){if(this.logger.info("Check if CSV file"),c.existsSync(n.join(this.configService.config.migration.rootMedi,this.CSV_FILE))){this.logger.info("Le fichier CSV auteur existe. Le créer quand même ?");const e=["Conserver","Ecraser"];return new Promise((t,s)=>{d.dialog.showMessageBox({type:"question",message:"Le fichier auteur existe déjà. Faut-il le conserver ou l'écraser ?",buttons:e,cancelId:-1},i=>{this.logger.info("L'utilisateur a répondu : "+e[i]),0==i?t(!1):1==i?t(!0):s()})})}return this.logger.info("Aucun fichier CSV trouvé"),Promise.resolve(!0)}createCSV(){return this.logger.info("Create CSV file"),new Promise((e,t)=>{u.HttpUtils.getData(this.migrateServiceAddress.host,"/create_csv_auteur",this.migrateServiceAddress.port).then(t=>{this.logger.info("created file"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.CREATE_EXCEL,state:r.Const.STATE_SUCCESS}),e(o.WorkflowResult.DONE)},e=>{this.logger.info("failed to create file"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.CREATE_EXCEL,state:r.Const.STATE_FAILURE,errorMessage:`Erreur création excel : ${e}`}),t(o.WorkflowResult.FAIL)})})}askAndCreateCSV(){return this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.CREATE_EXCEL,state:r.Const.STATE_IN_PROGRESS}),new Promise((e,t)=>{this.logger.info("Ask for CSV creation"),this.checkIfCSVshouldBeCreated().then(s=>{s?(this.logger.info("Create..."),this.createCSV().then(t=>{e(t)},e=>{t(e)})):(this.logger.info("No file to create"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.CREATE_EXCEL,state:r.Const.STATE_SUCCESS}),e(o.WorkflowResult.ALREADY_DONE))},e=>{this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.CREATE_EXCEL,state:r.Const.STATE_FAILURE}),t(o.WorkflowResult.FAIL)})})}askToStartMigration(){return new Promise((e,t)=>{d.dialog.showMessageBox({type:"question",message:"Fichier auteur créé. Faut-il lancer la reprise maintenant ?",buttons:["Oui","Non"],cancelId:-1},s=>{this.logger.info("L'utilisateur a répondu : "+s),0==s?e(o.WorkflowResult.DONE):(this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_EXEC,substep:r.Const.START_MIGRATION,state:r.Const.STATE_FAILURE}),t(o.WorkflowResult.FAIL))})})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(15),r=s(2),o=s(72),n=s(14),a=s(4),c=s(19),l=s(11);t.ODBCService=class extends i.AbstractService{constructor(e,t,s){super(t,s),this.migrationRestService=e}install(){return this.logger.info("Start installing ODBC"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_INSTALL,state:r.Const.STATE_IN_PROGRESS}),o.OdbcInstaller.installOdbc(this.systemInfo.basePath,this.systemInfo.tierResourcePath).then(e=>(this.logger.info("ODBC installation success"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_INSTALL,state:r.Const.STATE_SUCCESS}),Promise.resolve(n.WorkflowResult.DONE)),e=>{let t,s;return this.logger.error("ODBC installation failure. Error:"),this.logger.error(e),e&&-1!=e.toString().indexOf("EACCES")?(t="5.1",l.DialogUtils.showError("Erreur d'accès. Veuillez lancer l'application en mode administrateur",e)):(t="5.2",s=e,l.DialogUtils.showError("Une erreur est survenue",e)),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_INSTALL,state:r.Const.STATE_FAILURE,errorCode:t,errorMessage:s}),Promise.reject(e)})}config(){return this.logger.info("Start configuring ODBC"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_CONFIG,state:r.Const.STATE_IN_PROGRESS}),o.OdbcInstaller.configureOdbc(this.systemInfo.basePath).then(e=>(this.logger.info("ODBC config success"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_CONFIG,state:r.Const.STATE_SUCCESS}),Promise.resolve(n.WorkflowResult.DONE)),e=>(this.logger.error(`ODBC config failure. Error : ${e}`),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_CONFIG,state:r.Const.STATE_FAILURE,errorMessage:e,errorCode:"5.3"}),l.DialogUtils.showError("Une erreur est survenue lors de l'ajout au registre. Veuillez relancer l'application en mode administrateur",e),Promise.reject(e)))}checkConfig(){return this.migrationRestService.startIfNotRunning().then(e=>this.migrationRestService.checkConfiguration()).then(e=>{if(!e)throw this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_CONFIG,state:r.Const.STATE_FAILURE,errorCode:"5.4"}),this.migrationRestService.stop(),new Error("Failed configure ODBC")})}checkODBCInstalled(){return this.logger.info("Checking if ODBC is installed"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_CHECK_INSTALLED,state:r.Const.STATE_IN_PROGRESS}),o.OdbcInstaller.checkIfOdbcExist().then(e=>(e?this.logger.info("ODBC is installed"):this.logger.warn("ODBC is not installed"),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_CHECK_INSTALLED,state:r.Const.STATE_SUCCESS}),e))}askDirectoryForOdbc(){return new Promise((e,t)=>{a.dialog.showMessageBox({type:"warning",message:"Pouvez-vous choisir le dossier contenant les données à importer?"},()=>{e(c.FileHelper.chooseDirectory())})})}validateConfigFile(){return this.logger.info("Check directory ODBC"),new Promise((e,t)=>{o.OdbcInstaller.checkOdbcFilePath()?(this.logger.info("Directory data exists"),e()):(this.logger.warn("Directory data not exists"),this.askDirectoryForOdbc().then(t=>{this.configService.config.odbc.pathToData=t,this.configService.save(),e(this.validateConfigFile())}).catch(e=>{this.logger.warn(e),this.sendProgress(r.Const.STEP_STATE_CHANGED,{step:r.Const.STEP_MIGRATION_INIT,substep:r.Const.ODBC_CHECK_INSTALLED,state:r.Const.STATE_FAILURE}),t(e)}))})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(73),r=s(1),o=s(5),n=s(6),a=s(46),c=s(0);class l{static deleteFolderRecursive(e){let t=s(3);t.existsSync(e)&&(t.readdirSync(e).forEach(function(s,i){let r=e.join(e,s);t.lstatSync(r).isDirectory()?l.deleteFolderRecursive(r):t.unlinkSync(r)}),t.rmdirSync(e))}static checkOdbcFilePath(){const e=l.configService.config.odbc;if(!e.isRemote){let t=s(3);return e.pathToData&&t.existsSync(e.pathToData)}return!0}static installOdbc(e,t){return l.logger.info("Start installing ODBC"),new Promise((i,n)=>{let a=s(10),c=r.join(e,"..","..");l.logger.info(`Copying files in the root path. Path : ${c}`),a.copySync(r.join(t,"WXPACKODBC32.zip"),r.join(c,"WXPACKODBC32.zip")),l.logger.info("Copied WXPACKODBC32.zip successfully"),a.copySync(r.join(t,"WXPACKODBC64.zip"),r.join(c,"WXPACKODBC64.zip")),l.logger.info("Copied WXPACKODBC64.zip successfully"),a.copySync(r.join(t,"odbc"),r.join(e,"odbc-temp")),l.logger.info("Copied odbc to odbc-temp successfully"),o.execFile(r.join(t,"odbc","Pack.exe"),e=>{l.logger.error(`Executing Pack.exe failed. Error : ${e}`),n(e)}).on("exit",s=>{l.logger.info(`ODBC install exit with code ${s}`),0==s?(setTimeout(()=>{a.copySync(r.join(e,"odbc-temp"),r.join(t,"odbc")),l.logger.info("Copied odbc-temp to odbc"),a.removeSync(r.join(e,"odbc-temp"))},5e3),i()):n(s)})})}static configureOdbc(e){return l.logger.info("Start configuring ODBC"),new Promise((t,s)=>{l.logger.info("Getting registry from config");const n=l.configService.config.odbc;l.logger.info("Loaded from config :"),l.logger.info(n),l.logger.info("Creating the reg file"),i.OdbcRegister.createDnsRegFile(e,n),l.logger.info(`regedit.exe "${r.join(e,"dns.reg")}"`);try{l.logger.info("Executing regedit"),o.exec(`regedit.exe /S "${r.join(e,"dns.reg")}"`,e=>{e&&(l.logger.error("REJECT INIT"),l.logger.error(`Executing regedit failed. ERROR : ${e}`),s())}).on("exit",e=>{l.logger.info(`Executing regedit finished with code ${e}`),0==e?(l.logger.info("Checking if ODBC is correctly configure"),l.checkRegister().then(e=>{l.logger.info(`ODBC is correctly configured ? ${e}`),e?t():(l.logger.error("ODBC is not correctly configured"),s())},e=>{l.logger.error("ODBC failed to check if correctly configured. Error :"),l.logger.error(e),s(e)})):(l.logger.error(`ODBC failed to configure. Error code : ${e}`),s(e))})}catch(e){l.logger.info(`ODBC failed to configure. Error : ${e}`),s(e)}})}static checkIfOdbcExist(){return a.RegistryHelper.checkIfPathExists(s(27).HKLM,"\\SOFTWARE\\WOW6432Node\\ODBC\\ODBCINST.INI\\HFSQL")}static checkRegister(){return a.RegistryHelper.checkIfPathExists(s(27).HKLM,`\\SOFTWARE\\WOW6432Node\\ODBC\\ODBC.INI\\${this.configService.config.odbc.name}`)}}l.configService=new n.ConfigService,l.logger=c.LoggerService.getLogger(),t.OdbcInstaller=l},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(1),r=s(0);class o{static createLocalDsnRegFile(e,t){let r=s(3),n=r.readFileSync(i.join(e,"template","ds-local.template.reg"),"UTF-8");n=(n=(n=(n=(n=n.replace(o.NAME,t.name)).replace(o.PATH_TO_DATA,t.pathToData.replace(/\\/g,"\\\\"))).replace(o.PASSWORD,t.password)).replace(o.WDD,t.wdd)).replace(o.DRIVER,t.driver.replace(/\\/g,"\\\\")),r.writeFileSync(i.join(e,"dns.reg"),n),o.logger.info("Successfully created dns.reg for local")}static createRemoteDsnRegFile(e,t){let r=s(3),n=r.readFileSync(i.join(e,"template","ds-remote.template.reg"),"UTF-8");n=(n=(n=(n=(n=(n=(n=(n=n.replace(o.NAME,t.name)).replace(o.DATABASE,t.database)).replace(o.PASSWORD,t.password)).replace(o.USERNAME,t.username)).replace(o.SERVER,t.server)).replace(o.PORT,t.port)).replace(o.WDD,t.wdd)).replace(o.DRIVER,t.driver.replace(/\\/g,"\\\\")),r.writeFileSync(i.join(e,"dns.reg"),n),o.logger.info("Successfully created dns.reg for remote")}static createDnsRegFile(e,t){t.isRemote?this.createRemoteDsnRegFile(e,t):this.createLocalDsnRegFile(e,t)}}o.NAME=/%NAME%/g,o.DRIVER=/%DRIVER%/g,o.DATABASE=/%DATABASE%/g,o.PASSWORD=/%PASSWORD%/g,o.PATH_TO_DATA=/%PATH_TO_DATA%/g,o.SERVER=/%SERVER%/g,o.USERNAME=/%USERNAME%/g,o.PORT=/%PORT%/g,o.WDD=/%WDD%/g,o.logger=r.LoggerService.getLogger(),t.OdbcRegister=o},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(15),r=s(75),o=s(14),n=s(40),a=s(33),c=s(11);t.UpdateService=class extends i.AbstractService{constructor(e,t){super(e,t),this.resourcesUpdater=new r.ResourcesUpdater(this.configService.config,e,t),this.backendService=new a.BackendService(e,t),this.updater=n.default.getInstance()}updateResources(){return new Promise((e,t)=>{this.resourcesUpdater.execute(s=>{switch(s){case-1:c.DialogUtils.showError("Impossible de télécharger les ressources, veuillez vérifier votre connexion internet et redémarrer l'application","Impossible de télécharger les fichiers depuis GitHub"),t(o.WorkflowResult.FAIL);break;case 1:c.DialogUtils.showError("Veuillez relancer l'application en mode administrateur","Administrative rights needed"),t(o.WorkflowResult.FAIL);break;case 2:c.DialogUtils.showError("Impossible de mettre à jour couchDB, veuillez contacter un administrateur","Impossible de mettre à jour couchDB"),t(o.WorkflowResult.FAIL);break;case 3:c.DialogUtils.showError("Impossible de mettre à jour Java, veuillez redémarrer votre ordinateur et réessayer, sinon contacter un administrateur","Impossible de mettre à jour Java"),t(o.WorkflowResult.FAIL);case 4:c.DialogUtils.showError("Une ressource n'a pas pu être téléchargée et aucune ancienne version n'a été trouvée.","Une ressource n'a pas pu être téléchargée"),t(o.WorkflowResult.FAIL);break;case 6:c.DialogUtils.showError("Aucune connexion internet. L'utilisation va continuer avec des ressources obsolètes.","Aucune connexion internet"),e(o.WorkflowResult.DONE);break;case 7:c.DialogUtils.showError("Aucune connexion internet et des ressources sont manquantes pour la bonne continuité de l'application","Aucune connexion internet"),t(o.WorkflowResult.FAIL);break;default:e(o.WorkflowResult.DONE)}})})}updateElectron(){return this.updater.check()}startLookingForUpdates(){this.updater.startBackground()}stopLookingForUpdates(){this.looker&&clearInterval(this.looker)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(44),r=s(5),o=s(2),n=s(1),a=s(0),c=s(76),l=s(77),h=s(16),g=s(17),u=s(26),d=s(25),f=s(28),p=s(10),C=s(80),E=s(7);t.ResourcesUpdater=class{constructor(e,t,r){this.config=e,this.systemInfo=t,this.sendProgress=r,this.logger=a.LoggerService.getLogger(),this.tmpPrefix="TMP_",this.newConfig=new i.UpdateConfig,this.currentConfig=new i.UpdateConfig,this.md5File=s(81),this.installingIndex=0,this.updateConfigService=new h.UpdateConfigService,this.fileDownloader=new c.NillFileDownloader;const o=E.get(e,"serviceAddresses.icure",g.IcureBackend.DEFAULT_ADDRESS),n=E.get(e,"serviceAddresses.templating",d.ReportingBackend.DEFAULT_ADDRESS),l=E.get(e,"serviceAddresses.migrationService",u.MigrateBackend.DEFAULT_ADDRESS);this.icureBackend=new g.IcureBackend(o,t),this.reportingBackend=new d.ReportingBackend(n,t),this.migrateBackend=new u.MigrateBackend(l,t)}execute(e){this.logger.info("Start resource service"),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:o.Const.CHECK_RESOURCES,state:o.Const.STATE_IN_PROGRESS}),this.newConfig=this.updateConfigService.config,this.logger.info(`Load downloader for ${this.newConfig.fileDownloaderInfo.type}`),this.fileDownloader=l.FileDownloaderFactory.getFileDownloader(this.newConfig.fileDownloaderInfo);try{this.currentConfig=JSON.parse(p.readFileSync(n.join(this.systemInfo.tierResourcePath,"current_version.json"),"UTF-8"))}catch(e){this.logger.warn(`Failed to reade current version. ${e}`),this.logger.warn("Creating a new one."),this.currentConfig=new i.UpdateConfig}this.canContinueWithoutInternet(e).then(t=>{t&&this.processNextResources(e)})}doDownload(e,t){return"full"===E.get(this.config,"installationType","full")||t.mandatory?e?f.VersionHelper.equals(e.release,t.release)?this.fileExists(e)?this.corrupted(e)?(this.logger.info(`${e.fileName} is corrupted`),!0):(this.logger.info(`${e.fileName} is valid. Do not download it`),!1):(this.logger.info(`${e.fileName} does not exists not`),!0):(this.logger.info(`${t.fileName} is not up to date`),!0):(this.logger.info(`No current version for ${t.fileName}`),!0):(this.logger.info(`${t.fileName} is not needed`),!1)}processNextResources(e){if(this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:o.Const.CHECK_RESOURCES,state:o.Const.STATE_SUCCESS}),this.installingIndex<this.newConfig.files.length){let t=this.newConfig.files[this.installingIndex],s=this.currentConfig.files.find(e=>e.fileName==t.fileName);this.installingIndex++;const i=s?s.release:"NONE INSTALLED";this.logger.info(`Checking resource : ${t.fileName}. Release : ${t.release} (current ${i})`),this.doDownload(s,t)?(this.logger.info(`Out to date : ${t.fileName}`),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:t.fileName,state:o.Const.STATE_IN_PROGRESS,percent:0}),this.preInstall(t).then(s=>this.downloadResource(t,3,null,e)).then(i=>{i?(this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:t.fileName,state:o.Const.STATE_IN_PROGRESS,percent:100}),this.finalize(t),this.installResource(t).then(i=>{this.logger.info("Ready to install the file"),s?(s.release=this.newConfig.files[this.installingIndex-1].release,s.checksum=this.newConfig.files[this.installingIndex-1].checksum):this.currentConfig.files.push(this.newConfig.files[this.installingIndex-1]),p.writeFileSync(n.join(this.systemInfo.tierResourcePath,"current_version.json"),JSON.stringify(this.currentConfig,null,2)),this.logger.info("Ready to process next resource"),this.postInstall(t),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:t.fileName,state:o.Const.STATE_SUCCESS,percent:100}),this.processNextResources(e)},s=>{this.logger.error("fail to post update "+t.fileName+" : "+s),e.call(this,s)})):(this.logger.warn("Ignore post download"),this.processNextResources(e))},s=>{this.logger.error("failed to download "+t.fileName+" : "+s),e.call(this,-1)})):(this.logger.info(`No need to update : ${t.fileName}`),this.processNextResources(e))}else this.logger.info("Everything is up to date"),p.writeFileSync(n.join(this.systemInfo.tierResourcePath,"current_version.json"),JSON.stringify(this.newConfig,null,2)),e.call(this,0)}computeChecksum(e){return this.md5File.sync(n.join(this.systemInfo.tierResourcePath,`${e}`)).toString()}definitivelyFailed(e,t){try{const t=n.join(this.systemInfo.tierResourcePath,this.tmpPrefix+e.fileName);this.logger.info(`Deleting : ${t}`),p.unlinkSync(t),this.logger.info("Tmp file deleted.")}catch(e){this.logger.warn("Can not delete tmp file : "+e)}if(p.existsSync(n.join(this.systemInfo.tierResourcePath,e.fileName)))return this.logger.warn(`Failed to download ${e.fileName}. Old version will be used`),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:e.fileName,state:o.Const.STATE_WARNING,percent:100}),this.logger.info("continue"),!1;throw this.logger.error("Checksum mismatch after 3 download trials and no old version found"),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:e.fileName,state:o.Const.STATE_FAILURE,percent:100}),t.call(this,4),new Error("Checksum mismatch after 3 download trials")}checkDownload(e){this.logger.info(`check checksum of ${e.fileName}`);const t=this.computeChecksum(this.tmpPrefix+e.fileName);return e.checksum===t||(this.logger.warn(`Checksum mismatch : ${e.fileName} - expect: ${e.checksum} - computed: ${t}`),!1)}corrupted(e){if(e.recheck){this.logger.info(`check checksum of ${e.fileName}`);let t=this.computeChecksum(e.fileName);return t==e.checksum?(this.logger.info(`Expected checksum : ${e.checksum}; current checksum : ${t}`),!1):(this.logger.warn(`Expected checksum : ${e.checksum}; current checksum : ${t}`),!0)}return!1}downloadResource(e,t=3,s,i){if(t>0)return this.logger.info(`Downloading : ${e.fileName}`),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:e.fileName,state:o.Const.STATE_IN_PROGRESS,percent:0}),new Promise((r,a)=>{this.fileDownloader.download(e.release,e.fileName,n.join(this.systemInfo.tierResourcePath,`${this.tmpPrefix}${e.fileName}`),t=>{this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:e.fileName,state:o.Const.STATE_IN_PROGRESS,percent:t})}).then(t=>this.checkDownload(e)).then(n=>{if(!n)return this.logger.warn(`restart download of ${e.fileName} try remaining : ${t-1}`),this.downloadResource(e,--t,s||r,i);this.logger.info(`Download successful for ${e.fileName}`),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:e.fileName,state:o.Const.STATE_SUCCESS,percent:100}),s?s(n):r(n)}).catch(t=>{this.logger.error(`Downloading resource failure. Error : ${t}`),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:e.fileName,state:o.Const.STATE_FAILURE}),a(t)})});{let t=this.definitivelyFailed(e,i);return s&&s(t),Promise.resolve(t)}}installResource(e){return this.logger.info(`Start installing : ${e.fileName}`),new Promise((t,s)=>{if(e.isExecutable)switch(e.fileName){case"couchdb.msi":t();break;case"win-java7.zip":case"win-java8.zip":case"mac-java7.zip":case"mac-java8.zip":try{this.updateJava(e),t()}catch(e){this.logger.error("Fail to extract java"),this.logger.error(e),s(3)}break;case"odbc.zip":this.updateOdbc(e),t();break;default:t()}else t()})}getExtractionPathJava(e){const t=e.fileName.indexOf("7")>=0?"java7":"java";return n.join(this.systemInfo.tierResourcePath,t,`${this.systemInfo.platform}-${this.systemInfo.arch}`)}updateJava(e){this.logger.info(`Update Java : ${e.fileName}`);const t=new(s(38))(n.join(this.systemInfo.tierResourcePath,e.fileName)),i=this.getExtractionPathJava(e);p.existsSync(i)&&(this.logger.info(`Delete content of ${i}`),p.emptyDirSync(i)),this.logger.info(`Extract archive content in ${i}`),t.extractAllTo(i,!0),this.systemInfo.platform===o.Const.MAC&&r.execSync(`chmod -R 775 ${i.replace(/(\s+)/g,"\\$1")}`)}updateOdbc(e){this.logger.info(`Update File : ${e.fileName}`),new(s(38))(n.join(this.systemInfo.tierResourcePath,e.fileName)).extractAllTo(this.systemInfo.tierResourcePath,!0)}preInstall(e){return new Promise((t,s)=>{let i;switch(this.logger.info(`pre-processing ${e.fileName}`),e.fileName){case"icure-backend.jar":i=this.icureBackend.stop();break;case"win-java7.zip":case"epicure-rest-service.jar":i=this.migrateBackend.stop();break;case"medispring-templating.jar":i=this.reportingBackend.stop();break;case"win-java8.zip":case"mac-java8.zip":i=this.icureBackend.stop().then(e=>this.reportingBackend.stop());break;default:t()}i&&i.then(s=>{s||this.logger.warn(`${e.fileName} n'a pas pu être killé`),t()},e=>{t()})})}fileExists(e){let t=!1;switch(e.fileName){case"win-java7.zip":case"win-java8.zip":case"mac-java8.zip":t=p.existsSync(this.getExtractionPathJava(e));break;case"odbc.zip":t=p.existsSync(n.join(this.systemInfo.tierResourcePath,"odbc"));break;default:t=p.existsSync(n.join(this.systemInfo.tierResourcePath,e.fileName))}return this.logger.info(`${e.fileName} exists? ${t}`),t}postInstall(e){try{e.deleteAfter&&p.unlink(n.join(this.systemInfo.tierResourcePath,e.fileName),e=>{})}catch(t){this.logger.warn(e.fileName+" : deleting failed")}}finalize(e){this.logger.info(`rename ${this.tmpPrefix}${e.fileName} to ${e.fileName}`);try{p.renameSync(n.join(this.systemInfo.tierResourcePath,`${this.tmpPrefix}${e.fileName}`),n.join(this.systemInfo.tierResourcePath,e.fileName))}catch(e){throw this.logger.error(`Error while renaming the temp file. ${e}`),e}}canContinueWithoutInternet(e){return new Promise((t,s)=>{this.logger.info("Check if internet is online"),this.internetOnline().then(s=>{s?(this.logger.info("Internet connexion ok"),t(!0)):(this.allRessourcePresent()?(this.logger.info("All ressources are presents"),this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:o.Const.CHECK_RESOURCES,state:o.Const.STATE_SUCCESS}),e.call(this,this.allRessourceUpToDate()?5:6)):(this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_RESOURCE_UPDATER,substep:o.Const.CHECK_RESOURCES,state:o.Const.STATE_FAILURE}),this.logger.info("Some ressources missing"),e.call(this,7)),t(!1))})})}internetOnline(){return C().then(e=>e)}allRessourcePresent(){return!this.newConfig.files.some(e=>!this.fileExists(e))}allRessourceUpToDate(){return!this.newConfig.files.some(e=>{let t=this.currentConfig.files.find(t=>e.fileName==t.fileName);return!t||!f.VersionHelper.equals(t.release,e.release)})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.NillFileDownloader=class{download(e,t,s,i){}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(78),r=s(79);t.FileDownloaderFactory=class{static getFileDownloader(e){let t;switch(e.type){case"github":if(!e.owner||!e.repository)throw new Error("No owner or reposiroty in config. Cannot download from Github");t=new i.GithubFileDownloader(e.owner,e.repository);break;case"amazons3":if(!e.bucket)throw new Error("No bucket in config. Cannot download from Amazon");t=new r.Amazons3FileDownloader(e.bucket);break;default:throw new Error(`No downloader of type "${e.type}"`)}return t}}},function(e,t,s){"use strict";var i=this&&this.__awaiter||function(e,t,s,i){return new(s||(s=Promise))(function(r,o){function n(e){try{c(i.next(e))}catch(e){o(e)}}function a(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){e.done?r(e.value):new s(function(t){t(e.value)}).then(n,a)}c((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const r=s(39);t.GithubFileDownloader=class{constructor(e,t){this.owner=e,this.repo=t,this.github="https://github.com",this.downloader=new r.Downloader}composeUrl(e,t){return`${this.github}/${this.owner}/${this.repo}/releases/download/v${e}/${t}`}download(e,t,s,r){return i(this,void 0,void 0,function*(){let i=this.composeUrl(e,t);return this.downloader.download(i,s,r)})}}},function(e,t,s){"use strict";var i=this&&this.__awaiter||function(e,t,s,i){return new(s||(s=Promise))(function(r,o){function n(e){try{c(i.next(e))}catch(e){o(e)}}function a(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){e.done?r(e.value):new s(function(t){t(e.value)}).then(n,a)}c((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const r=s(39);t.Amazons3FileDownloader=class{constructor(e){this.bucket=e,this.downloader=new r.Downloader,this.region="eu-central-1"}download(e,t,s,r){return i(this,void 0,void 0,function*(){let i=e?`https://${this.bucket}.s3.${this.region}.amazonaws.com/${e}/${t}`:`https://${this.bucket}.s3.${this.region}.amazonaws.com/${t}`;return this.downloader.download(i,s,r)})}}},function(e,t){e.exports=require("is-online")},function(e,t){e.exports=require("md5-file")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(15),r=s(14),o=s(83),n=s(2),a=s(11);t.BeidService=class extends i.AbstractService{constructor(e,t){super(e,t),this._beidPath="",this.beidInstaller=new o.BeidInstaller(e)}installBeidSoft(){this.logger.info("Install BEID starting..."),this.sendProgress(n.Const.STEP_STATE_CHANGED,{step:n.Const.STEP_BEID,substep:n.Const.BEID_INSTALL,state:n.Const.STATE_IN_PROGRESS}),this.logger.info("Getting the Update Info");const e=this.beidInstaller.getLastVersion();return this.beidInstaller.update(this.beidPath,e.release).then(e=>0==e?(this.logger.info("Beid installed successfully"),this.sendProgress(n.Const.STEP_STATE_CHANGED,{step:n.Const.STEP_BEID,substep:n.Const.BEID_INSTALL,state:n.Const.STATE_SUCCESS}),Promise.resolve(r.WorkflowResult.DONE)):(this.logger.info(`Beid failed to install. Code : ${e}`),this.sendProgress(n.Const.STEP_STATE_CHANGED,{step:n.Const.STEP_BEID,substep:n.Const.BEID_INSTALL,state:n.Const.STATE_FAILURE}),Promise.reject(`Beid failed to install. Code : ${e}`)),e=>(1603==e?(this.logger.warn("Beid failed to install : administrative right needed"),a.DialogUtils.showError("Veuillez relancer l'application en mode administrateur")):1619==e?(this.logger.error("Beid failed to install : no installer found"),a.DialogUtils.showError("Impossible de trouver l'installateur beid")):(this.logger.error("Beid installation failed with code : "+e),a.DialogUtils.showFatal(`L'installation de beid a échouée avec le code ${e}`,e)),this.sendProgress(n.Const.STEP_STATE_CHANGED,{step:n.Const.STEP_BEID,substep:n.Const.BEID_INSTALL,state:n.Const.STATE_FAILURE,errorCode:`2.${e}`}),Promise.reject(e)))}get beidPath(){return this._beidPath}set beidPath(e){this._beidPath=e}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0),r=s(45),o=s(2),n=s(84),a=s(16),c=s(1);t.BeidInstaller=class{constructor(e){this.updateConfigService=new a.UpdateConfigService,this.loggger=i.LoggerService.getLogger(),e.platform==o.Const.WIN?(this.installerName="belgium_eid_quickinstaller.msi",this.installer=new r.MsiInstaller(c.join(e.tierResourcePath,this.installerName),"{DB942AEA-93D6-4FE4-8862-180D35A73838}",e.platform,e.arch,"BEID")):(this.installerName="eid-quickinstaller.dmg",this.installer=new n.DmgInstaller(e.tierResourcePath,this.updateConfigService.getUpdateFileInfo(this.installerName)))}update(e,t){return this.loggger.info(`Update BEID to version ${t}, to path ${e}`),this.installer.update(e,t)}getLastVersion(){return this.updateConfigService.getUpdateFileInfo(this.installerName)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(5),r=s(1),o=s(0),n=s(6),a=s(23),c=s(28),l=s(29);t.DmgInstaller=class{constructor(e,t){this.tierResourcesPath=e,this.updateInfo=t,this.logger=o.LoggerService.getLogger(),this.configService=new n.ConfigService,this.installConfigService=new l.InstallStateConfig}addListeners(e,t,s,i=-1){e.on("exit",e=>{this.logger.info(`${t} exit with code ${e}`),s(-1==i?e:i)}),e.on("error",e=>{this.logger.error(`${t} error occured : ${e}`),this.logger.error(e)}),e.stdout.on("data",e=>{this.logger.info(`${t} stderr ${e}`),this.logger.info(e)}),e.stderr.on("data",e=>{this.logger.info(`${t} stdout ${e}`),this.logger.info(e)})}removeExtension(e){return e.split(".").slice(0,-1).join(".")}install(e){this.logger.info(`Intalling ${this.updateInfo.fileName} to ${e}`);let t=this.removeExtension(this.updateInfo.fileName),s=t+"-signed.pkg",i=`${t}-${this.updateInfo.release}`;return this.attach(r.join(this.tierResourcesPath,this.updateInfo.fileName)).then(t=>this.executePKG(i,s,e)).then(e=>this.unmount(i,e)).then(e=>this.postInstall(e))}uninstall(){return Promise.resolve()}update(e,t){return this.version().then(s=>{if(!c.VersionHelper.equals(s,t))return this.install(e)}),Promise.resolve(0)}version(){let e="0",t=this.installConfigService.getStateInfo(this.updateInfo.fileName);return t&&(e=t.release),Promise.resolve(e)}attach(e){return new Promise((t,s)=>{let r=i.exec(`hdiutil attach "${e}"`);r.on("exit",e=>{this.logger.info(`$attach exit with code ${e}`),t(e)}),r.on("error",e=>{this.logger.info(`attach error occured : ${e}`),this.logger.error(e)}),r.stdout.on("data",e=>{this.logger.info(`attach stderr ${e}`),this.logger.info(e)}),r.stderr.on("data",e=>{this.logger.info(`attach stdout ${e}`),this.logger.info(e)})})}executePKG(e,t,s){return new Promise((s,i)=>{let r=new a.SudoExec,o=`installer -package "/Volumes/${e}/${t}" -target /`;r.exec(o,(e,t,r)=>{e?(this.logger.error(e),i()):(this.logger.info(r),s(0))})})}unmount(e,t){return new Promise((s,r)=>{let o=i.exec(`hdiutil detach "/Volumes/${e}"`);this.addListeners(o,"detach",s,t)})}isInstalled(){return Promise.resolve(!0)}postInstall(e){return this.installConfigService.setStateInfo(this.updateInfo.fileName,this.updateInfo.release),0==e&&(this.configService.config.beidInstalled=!0,this.configService.save()),Promise.resolve(e)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(86),r=s(1),o=s(2),n=s(15);t.FirewallPrompterService=class extends n.AbstractService{getJavaPath(e=!0){let t="";return t=this.systemInfo.platform==o.Const.WIN?r.join(this.systemInfo.tierResourcePath,e?"java":"java7","win32-x64","bin","java.exe"):r.join(this.systemInfo.tierResourcePath,e?"java":"java7","darwin-x64","Home","bin","java"),this.logger.info("Path to java "+t),t}promptJava7FirewallPermission(){return this.logger.info("Execute jar for java 7 firewall permission"),new i.JarExecuter(this.getJavaPath(!1),this.systemInfo).execute("firewall-prompter-7.jar").then(e=>{0==e?this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_FIREWALL,substep:o.Const.CHECK_FIREWALL_7,state:o.Const.STATE_SUCCESS}):this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_FIREWALL,substep:o.Const.CHECK_FIREWALL_7,state:o.Const.STATE_WARNING,errorMessage:`Exit code : ${e}`})},e=>{this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_FIREWALL,substep:o.Const.CHECK_FIREWALL_7,state:o.Const.STATE_WARNING,errorMessage:`error : ${e}`})})}promptJava8FirewallPermission(){return this.logger.info("Execute jar for java 8 firewall permission"),new i.JarExecuter(this.getJavaPath(!0),this.systemInfo).execute("firewall-prompter-8.jar").then(e=>{0==e?this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_FIREWALL,substep:o.Const.CHECK_FIREWALL_8,state:o.Const.STATE_SUCCESS}):this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_FIREWALL,substep:o.Const.CHECK_FIREWALL_8,state:o.Const.STATE_WARNING,errorMessage:`Exit code : ${e}`})},e=>{this.sendProgress(o.Const.STEP_STATE_CHANGED,{step:o.Const.STEP_FIREWALL,substep:o.Const.CHECK_FIREWALL_8,state:o.Const.STATE_WARNING,errorMessage:`error : ${e}`})})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(5),r=s(1),o=s(0);t.JarExecuter=class{constructor(e,t){this.javaPath=e,this.systemInfo=t,this.logger=o.LoggerService.getLogger()}execute(e){return new Promise((t,s)=>{this.logger.info(`execute "${this.javaPath}" -jar "${r.join(this.systemInfo.basePath,e)}"`);let o=i.exec(`"${this.javaPath}" -jar "${r.join(this.systemInfo.basePath,e)}"`);o.stderr.on("data",e=>{e&&this.logger.error(e.toString("UTF-8"))}),o.on("exit",e=>{this.logger.info(`process end with ${e}`),t(e)})})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(21);t.MigrationUtils=class{static canDoMigration(e){return e!=i.MigrationMode.neverDoMigration}static shouldDoMigration(e){return e==i.MigrationMode.fullMigration||e==i.MigrationMode.testMigration}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(8),r=s(89);t.EHealthBoxListener=class extends i.AbstractApiListener{constructor(e){super("ehealthbox",e),this.service=new r.EHealthBoxService,this.get=(()=>this.service.get()),this.flagAsDone=(e=>this.service.flagAsDone(e)),this.setupPromise(this.getCanal("get"),this.get),this.setupPromise(this.getCanal("flagAsDone"),this.flagAsDone)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(90),r=s(10),o=s(1),n=s(0),a=s(6),c=s(19),l=s(7);t.EHealthBoxService=class{constructor(){if(this.pathToEHealth="",this.doneDirectory="",this.logger=n.LoggerService.getLogger(),this.configService=new a.ConfigService,this.pathToEHealth=l.get(this.configService,"config.eHealthBox.eHealthBoxDir"),this.doneDirectory=l.get(this.configService,"config.eHealthBox.doneDir"),"~"==this.pathToEHealth[0]){const e=s(30).homedir();this.pathToEHealth=o.join(e,this.pathToEHealth.slice(1))}c.FileHelper.createDirectoryIfNotExists(this.pathToEHealth)}f2b64(e){this.logger.info("read b64 of "+e);let t=r.readFileSync(e);return new Buffer(t).toString("base64")}get(){return this.logger.info("get file fo HealthBox"),new Promise((e,t)=>{let s=[];this.logger.info("read "+this.pathToEHealth),r.readdir(this.pathToEHealth,(n,a)=>{n?(this.logger.error("Err while reading : "+this.pathToEHealth),this.logger.error(n),t(n)):(a.forEach(e=>{if(this.logger.info("read "+o.join(this.pathToEHealth,e)),r.lstatSync(o.join(this.pathToEHealth,e)).isDirectory())this.logger.warn(e+" is a directory - ignored");else{this.logger.info("processing "+e);let t=new i.EHealthFile;t.fileName=e,t.b64=this.f2b64(o.join(this.pathToEHealth,e)),s.push(t),this.logger.info("OK "+e)}}),e(s))})})}flagAsDone(e){return this.logger.info("flag done files"),this.logger.info(e),r.ensureDir(o.join(this.pathToEHealth,this.doneDirectory)),new Promise((t,s)=>{e.forEach(e=>{r.copyFileSync(o.join(this.pathToEHealth,e),o.join(this.pathToEHealth,this.doneDirectory,e)),r.unlink(o.join(this.pathToEHealth,e))}),t(!0)})}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.EHealthFile=class{constructor(e="",t=""){this.fileName=e,this.b64=t}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(8),r=s(92),o=s(48);t.PrinterListener=class extends i.AbstractApiListener{constructor(e){super("printer",e),this.printFromUrl=(e=>(this.logger.info("Printing. args:",e),this.printer.printFromUrl(...e))),this.printFromBuffer=(e=>(this.logger.info("Printing. args:",e),this.printer.printFromBuffer(...e))),this.printFromBase64=(e=>(this.logger.info("Printing. args:",e),this.printer.printFromBase64(...e))),this.list=(()=>Promise.resolve(this.window.webContents.getPrinters().map(e=>e.name))),this.printer=new r.Printer(o.ElectronUtils.getSystemInfo()),this.setupPromise(this.getCanal("printFromUrl"),this.printFromUrl),this.setupPromise(this.getCanal("printFromBase64"),this.printFromBase64),this.setupPromise(this.getCanal("printFromBuffer"),this.printFromBuffer),this.setupPromise(this.getCanal("list"),this.list)}}},function(e,t,s){"use strict";var i=this&&this.__awaiter||function(e,t,s,i){return new(s||(s=Promise))(function(r,o){function n(e){try{c(i.next(e))}catch(e){o(e)}}function a(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){e.done?r(e.value):new s(function(t){t(e.value)}).then(n,a)}c((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const r=s(5),o=s(1),n=s(3),a=s(2),c=s(0),l=s(4),h=s(39);t.Printer=class{constructor(e){this.systemInfo=e,this.logger=c.LoggerService.getLogger(),this.downloader=new h.Downloader}printFromUrl(e,t,s){return i(this,void 0,void 0,function*(){const i=yield this.downloadTemp(e);return this.printFromPath(i,t,s)})}printFromPath(e,t,s){return this.systemInfo.platform==a.Const.WIN?this.printWin(e,t,s):this.printMac(e,t,s)}printFromBase64(e,t,s){return i(this,void 0,void 0,function*(){const i=/data:(.*);base64,(.*)/g.exec(e)||[],r=3===i.length?i[2]:e,o=Buffer.from(r,"base64");return this.printFromBuffer(o,t,s)})}printFromBuffer(e,t,s){return i(this,void 0,void 0,function*(){const i=yield this.downloadFromBuffer(e);return this.printFromPath(i,t,s)})}printMac(e,t,s){return new Promise((i,o)=>{let n="";s&&s.kendo_landscape&&(n="-o orientation-requested=4 -o fit-to-page -o media=a4");const a=t?`lpr ${n} -P ${t} "${e}"`:`lpr ${n} "${e}"`;this.logger.info(`Executing : ${a}`),r.exec(a,(e,t,s)=>{e&&this.logger.error(e),t&&this.logger.info(t),s&&this.logger.warn(s),e||s?o(e):i(!0)})})}printWin(e,t,s){return new Promise((i,n)=>{const a=o.join(this.systemInfo.tierResourcePath,"SumatraPDF.exe");let c="";s&&s.kendo_landscape&&(c='-print-settings "fit"');const l=t?`"${a}" ${c} -silent -print-to ${t} "${e}"`:`"${a}" ${c} -silent -print-to-default "${e}"`;this.logger.info(`Executing : ${l}`),r.exec(l,(e,t,s)=>{e&&this.logger.error(e),t&&this.logger.info(t),s&&this.logger.warn(s),e||s?n(e):i(!0)})})}downloadFromBuffer(e){const t=this.destinationWithRandomName();return new Promise((s,i)=>{n.writeFile(t,e,e=>{e?i(e):s(t)})})}downloadTemp(e){return i(this,void 0,void 0,function*(){const t=this.destinationWithRandomName();return this.logger.info("Try downloading:"),this.logger.info(e),this.downloader.download(e,t).then(()=>t)})}randomName(){return`${Math.random().toString(36).substr(2,5)}.pdf`}destinationWithRandomName(){const e=this.randomName();return o.join(l.app.getPath("temp"),e)}transfertToFile(e){const t=this.destinationWithRandomName(),s=this.btoa(e);return n.writeFileSync(t,s),t}base64ToBlob(e,t="",s=512){e=e.replace(/\s/g,"");let i=atob(e),r=[];for(let e=0;e<i.length;e+=s){let t=i.slice(e,e+s),n=new Array(t.length);for(var o=0;o<t.length;o++)n[o]=t.charCodeAt(o);let a=new Uint8Array(n);r.push(a)}return new Blob(r,{type:t})}btoa(e){if(Buffer.byteLength(e)!==e.length)throw new Error("bad string!");return Buffer.from(e,"binary").toString("base64")}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.SystemInfo=class{constructor(e,t,s,i){this.basePath=e,this.tierResourcePath=t,this.platform=s,this.arch=i}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(8),r=s(4);t.ApplicationListener=class extends i.AbstractApiListener{constructor(e){super("application",e),this.version=(e=>(this.logger.info("version : "+r.app.getVersion()),Promise.resolve(r.app.getVersion()))),this.logger.info("Application listener created"),this.setupPromise(this.getCanal("version"),this.version)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(8),r=s(96);t.P12Listener=class extends i.AbstractApiListener{constructor(e){super("p12",e),this.service=new r.P12Service,this.get=(()=>this.service.get()),this.setupPromise(this.getCanal("get"),this.get)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(10),r=s(1),o=s(7),n=s(6),a=s(0);t.P12Service=class{constructor(){this.pathsToP12=[],this.logger=a.LoggerService.getLogger(),this.configService=new n.ConfigService,this.pathsToP12=o.chain(o.get(this.configService,"config.p12.p12Dirs",[])).compact().map(e=>{if(e.startsWith("~")){const t=s(30).homedir();return r.join(t,e.slice(1))}return e}).value()}f2b64(e){this.logger.info("read b64 of "+e);let t=i.readFileSync(e);return new Buffer(t).toString("base64")}readLocation(e){return new Promise((t,s)=>{let n=[];this.logger.info("read "+e),i.existsSync(e)?i.readdir(e,(a,c)=>{a?(this.logger.error("Err while reading : "+e),this.logger.error(a),s(a)):(o.forEach(c,t=>{try{if(this.logger.info("read file "+r.join(e,t)),i.lstatSync(r.join(e,t)).isDirectory())this.logger.warn(t+" is a directory - ignored");else{this.logger.info("processing "+t);const s=new RegExp("(\\d{11}).(\\d{8}).(\\d{6})"),i=t.match(s);i?(n.push({fileName:t,ssin:i[1],date:i[2],hour:i[3],b64:this.f2b64(r.join(e,t))}),this.logger.info("OK "+t)):this.logger.warn(t+" no match - ignored")}}catch(e){this.logger.error("P12Service - Error when reading files",e,t)}}),t(n))}):(this.logger.info("path does not exists "+e),t([]))})}get(){return this.logger.info("get files for P12"),Promise.all(o.map(this.pathsToP12,e=>this.readLocation(e))).then(e=>o.flatten(e))}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(4),r=s(98);t.default=((e,t)=>{const o=r.cwd(i.app.getPath("userData")),n=`window-state-${e}.json`,a={width:t.width,height:t.height};let c,l={};l=(e=>{return i.screen.getAllDisplays().some(t=>((e,t)=>e.x>=t.x&&e.y>=t.y&&e.x+e.width<=t.x+t.width&&e.y+e.height<=t.y+t.height)(e,t.bounds))?e:(()=>{const e=i.screen.getPrimaryDisplay().bounds;return Object.assign({},a,{x:(e.width-a.width)/2,y:(e.height-a.height)/2})})()})((()=>{let e={};try{e=o.read(n,"json")}catch(e){}return Object.assign({},a,e)})());const h=s(99);return(c=new h(Object.assign({},t,l))).on("close",()=>{c.isMinimized()||c.isMaximized()||Object.assign(l,(()=>{const e=c.getPosition(),t=c.getSize();return{x:e[0],y:e[1],width:t[0],height:t[1]}})()),o.write(n,l,{atomic:!0})}),c})},function(e,t){e.exports=require("fs-jetpack")},function(e,t){e.exports=require("electron-pdf-window")},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(4);t.devMenuTemplate={label:"Development",submenu:[{role:"reload"},{role:"forcereload"},{role:"toggledevtools"},{label:"Quit",accelerator:"CmdOrCtrl+Q",click:()=>{i.app.quit()}}]}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.editMenuTemplate={label:"Edit",submenu:[{label:"Undo",accelerator:"CmdOrCtrl+Z",selector:"undo:"},{label:"Redo",accelerator:"Shift+CmdOrCtrl+Z",selector:"redo:"},{type:"separator"},{label:"Cut",accelerator:"CmdOrCtrl+X",selector:"cut:"},{label:"Copy",accelerator:"CmdOrCtrl+C",selector:"copy:"},{label:"Paste",accelerator:"CmdOrCtrl+V",selector:"paste:"},{label:"Select All",accelerator:"CmdOrCtrl+A",selector:"selectAll:"}]}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=s(0),r=s(103);t.ProxyServer=class{constructor(e){if(this.address=e,this.logger=i.LoggerService.getLogger(),!e.proxyPort||e.proxyPort<=0)throw new Error(`There is no valid proxy port for address ${JSON.stringify(e)}`);this.server=r.createProxyServer({target:`http://${e.host}:${e.port}`})}startListening(){return this.server.listen(this.address.proxyPort)}}},function(e,t){e.exports=require("http-proxy")},function(e,t){e.exports=require("is-elevated")}]);